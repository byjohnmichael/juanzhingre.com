{"ast":null,"code":"var _jsxFileName = \"/home/johnmichael/Work/juanzhingre.com/src/components/Icon/Icon.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IconContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: ${props => props.isDragging ? 'grabbing' : 'grab'};\n  user-select: none;\n  padding: 8px;\n  border-radius: 8px;\n  transition: ${props => props.isDragging ? 'none' : 'all 0.2s ease'};\n  position: absolute;\n  left: ${props => props.x}px;\n  top: ${props => props.y}px;\n  \n  /* Performance optimizations for smooth dragging */\n  will-change: ${props => props.isDragging ? 'left, top' : 'transform'};\n  transform: ${props => props.isDragging ? 'translateZ(0)' : 'scale(1)'};\n  backface-visibility: hidden;\n  \n  @media (max-width: 768px) {\n    padding: 8px;\n    min-height: 80px;\n    min-width: 80px;\n    touch-action: none;\n    flex-shrink: 0;\n  }\n  \n  &:hover {\n    background-color: rgba(255, 255, 255, 0.1);\n    transform: ${props => props.isDragging ? 'translateZ(0)' : 'scale(1.05)'};\n  }\n  \n  ${props => props.isSelected && !props.isDragging && `\n    background-color: rgba(255, 255, 255, 0.2);\n    transform: scale(1.1);\n  `}\n  \n  ${props => props.isDragging && `\n    background-color: rgba(255, 255, 255, 0.15);\n    transform: scale(1.1) translateZ(0);\n    z-index: 9999;\n  `}\n`;\n_c = IconContainer;\nconst IconCircle = styled.div`\n  width: 64px;\n  height: 64px;\n  border-radius: ${props => props.isImage ? '0' : '50%'};\n  background-color: ${props => props.isImage ? 'transparent' : props.color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 8px;\n  box-shadow: ${props => props.isImage ? 'none' : '0 4px 8px rgba(0, 0, 0, 0.2)'};\n  font-size: ${props => props.isImage ? '0' : '32px'};\n  color: white;\n  font-weight: bold;\n  overflow: hidden;\n  \n  @media (max-width: 768px) {\n    width: 72px;\n    height: 72px;\n    font-size: ${props => props.isImage ? '0' : '36px'};\n  }\n`;\n_c2 = IconCircle;\nconst IconLabel = styled.div`\n  color: white;\n  text-align: center;\n  font-size: 12px;\n  font-weight: 500;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);\n  max-width: 80px;\n  word-wrap: break-word;\n  \n  @media (max-width: 768px) {\n    font-size: 14px;\n    max-width: 100px;\n    line-height: 1.2;\n  }\n`;\n_c3 = IconLabel;\nconst Icon = ({\n  icon,\n  onClick,\n  onMove,\n  isSelected = false\n}) => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dragDistance, setDragDistance] = useState(0);\n  const [touchUsed, setTouchUsed] = useState(false);\n  const [lastClickTime, setLastClickTime] = useState(0);\n  const iconRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  const dragOffsetRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const startPosRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const isImageIcon = icon.icon.includes('.png') || icon.icon.includes('.jpg') || icon.icon.includes('.jpeg') || icon.icon.includes('.gif');\n\n  // Optimized mouse move handler using refs\n  const handleMouseMove = useCallback(e => {\n    if (isDraggingRef.current) {\n      const newX = e.clientX - dragOffsetRef.current.x;\n      const newY = e.clientY - dragOffsetRef.current.y;\n\n      // Calculate drag distance to determine if it's a drag or click\n      const distance = Math.sqrt(Math.pow(e.clientX - startPosRef.current.x, 2) + Math.pow(e.clientY - startPosRef.current.y, 2));\n      setDragDistance(distance);\n\n      // Use requestAnimationFrame for smooth updates\n      requestAnimationFrame(() => {\n        onMove(icon.id, newX, newY);\n      });\n    }\n  }, [icon.id, onMove]);\n\n  // Optimized mouse up handler\n  const handleMouseUp = useCallback(() => {\n    isDraggingRef.current = false;\n    setIsDragging(false);\n  }, []);\n\n  // Set up event listeners only when dragging\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove, {\n        passive: true\n      });\n      document.addEventListener('mouseup', handleMouseUp, {\n        passive: true\n      });\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDragging, handleMouseMove, handleMouseUp]);\n  const handleMouseDown = useCallback(e => {\n    var _iconRef$current;\n    // Only start dragging on left mouse button\n    if (e.button !== 0) return;\n    const rect = (_iconRef$current = iconRef.current) === null || _iconRef$current === void 0 ? void 0 : _iconRef$current.getBoundingClientRect();\n    if (!rect) return;\n    const offsetX = e.clientX - rect.left;\n    const offsetY = e.clientY - rect.top;\n\n    // Store start position for drag distance calculation\n    startPosRef.current = {\n      x: e.clientX,\n      y: e.clientY\n    };\n    dragOffsetRef.current = {\n      x: offsetX,\n      y: offsetY\n    };\n    setDragOffset({\n      x: offsetX,\n      y: offsetY\n    });\n    setDragDistance(0);\n    isDraggingRef.current = true;\n    setIsDragging(true);\n\n    // Prevent text selection during drag\n    e.preventDefault();\n  }, []);\n  const handleClick = useCallback(e => {\n    // Only handle mouse clicks on desktop\n    if (window.innerWidth <= 768) {\n      return;\n    }\n    const now = Date.now();\n    // Only trigger click if we didn't drag (drag distance < 5px) and it's not a rapid double-click\n    if (dragDistance < 5 && now - lastClickTime > 300) {\n      setLastClickTime(now);\n      onClick();\n    }\n  }, [onClick, dragDistance, lastClickTime]);\n  const handleTouchStart = useCallback(e => {\n    var _iconRef$current2;\n    setTouchUsed(true);\n    const touch = e.touches[0];\n    const rect = (_iconRef$current2 = iconRef.current) === null || _iconRef$current2 === void 0 ? void 0 : _iconRef$current2.getBoundingClientRect();\n    if (!rect) return;\n    const offsetX = touch.clientX - rect.left;\n    const offsetY = touch.clientY - rect.top;\n\n    // Store start position for drag distance calculation\n    startPosRef.current = {\n      x: touch.clientX,\n      y: touch.clientY\n    };\n    dragOffsetRef.current = {\n      x: offsetX,\n      y: offsetY\n    };\n    setDragOffset({\n      x: offsetX,\n      y: offsetY\n    });\n    setDragDistance(0);\n    isDraggingRef.current = true;\n    setIsDragging(true);\n\n    // Prevent default touch behavior\n    e.preventDefault();\n  }, []);\n  const handleTouchMove = useCallback(e => {\n    if (isDraggingRef.current) {\n      const touch = e.touches[0];\n      const newX = touch.clientX - dragOffsetRef.current.x;\n      const newY = touch.clientY - dragOffsetRef.current.y;\n\n      // Calculate drag distance to determine if it's a drag or tap\n      const distance = Math.sqrt(Math.pow(touch.clientX - startPosRef.current.x, 2) + Math.pow(touch.clientY - startPosRef.current.y, 2));\n      setDragDistance(distance);\n\n      // Use requestAnimationFrame for smooth updates\n      requestAnimationFrame(() => {\n        onMove(icon.id, newX, newY);\n      });\n    }\n  }, [icon.id, onMove]);\n\n  // Set up touch event listeners\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('touchmove', handleTouchMove, {\n        passive: false\n      });\n      document.addEventListener('touchend', handleTouchEnd, {\n        passive: true\n      });\n      return () => {\n        document.removeEventListener('touchmove', handleTouchMove);\n        document.removeEventListener('touchend', handleTouchEnd);\n      };\n    }\n  }, [isDragging, handleTouchMove, handleTouchEnd]);\n  const handleTouchEnd = useCallback(e => {\n    const now = Date.now();\n    // Only trigger click if we didn't drag (drag distance < 10px for touch) and it's not a rapid double-click\n    if (dragDistance < 10 && now - lastClickTime > 300) {\n      setLastClickTime(now);\n      onClick();\n    }\n    isDraggingRef.current = false;\n    setIsDragging(false);\n    // Reset touchUsed after a short delay to allow for proper click handling\n    setTimeout(() => setTouchUsed(false), 100);\n  }, [onClick, dragDistance, lastClickTime]);\n  return /*#__PURE__*/_jsxDEV(IconContainer, {\n    ref: iconRef,\n    x: icon.position.x,\n    y: icon.position.y,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    onTouchStart: handleTouchStart,\n    onTouchEnd: handleTouchEnd,\n    isSelected: isSelected,\n    isDragging: isDragging,\n    children: [/*#__PURE__*/_jsxDEV(IconCircle, {\n      color: icon.color,\n      isImage: isImageIcon,\n      children: isImageIcon ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon.icon,\n        alt: icon.name,\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain'\n        },\n        draggable: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this) : icon.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconLabel, {\n      children: icon.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(Icon, \"Cgc0HgI5K1Ez0kmMEIwocZTXUMs=\");\n_c4 = Icon;\nexport default Icon;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"IconContainer\");\n$RefreshReg$(_c2, \"IconCircle\");\n$RefreshReg$(_c3, \"IconLabel\");\n$RefreshReg$(_c4, \"Icon\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","styled","jsxDEV","_jsxDEV","IconContainer","div","props","isDragging","x","y","isSelected","_c","IconCircle","isImage","color","_c2","IconLabel","_c3","Icon","icon","onClick","onMove","_s","setIsDragging","dragOffset","setDragOffset","dragDistance","setDragDistance","touchUsed","setTouchUsed","lastClickTime","setLastClickTime","iconRef","isDraggingRef","dragOffsetRef","startPosRef","isImageIcon","includes","handleMouseMove","e","current","newX","clientX","newY","clientY","distance","Math","sqrt","pow","requestAnimationFrame","id","handleMouseUp","document","addEventListener","passive","removeEventListener","handleMouseDown","_iconRef$current","button","rect","getBoundingClientRect","offsetX","left","offsetY","top","preventDefault","handleClick","window","innerWidth","now","Date","handleTouchStart","_iconRef$current2","touch","touches","handleTouchMove","handleTouchEnd","setTimeout","ref","position","onMouseDown","onTouchStart","onTouchEnd","children","src","alt","name","style","width","height","objectFit","draggable","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["/home/johnmichael/Work/juanzhingre.com/src/components/Icon/Icon.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Icon as IconType } from '../../types/desktop';\n\ninterface IconProps {\n  icon: IconType;\n  onClick: () => void;\n  onMove: (id: string, x: number, y: number) => void;\n  isSelected?: boolean;\n}\n\nconst IconContainer = styled.div<{ isSelected: boolean; x: number; y: number; isDragging: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: ${props => props.isDragging ? 'grabbing' : 'grab'};\n  user-select: none;\n  padding: 8px;\n  border-radius: 8px;\n  transition: ${props => props.isDragging ? 'none' : 'all 0.2s ease'};\n  position: absolute;\n  left: ${props => props.x}px;\n  top: ${props => props.y}px;\n  \n  /* Performance optimizations for smooth dragging */\n  will-change: ${props => props.isDragging ? 'left, top' : 'transform'};\n  transform: ${props => props.isDragging ? 'translateZ(0)' : 'scale(1)'};\n  backface-visibility: hidden;\n  \n  @media (max-width: 768px) {\n    padding: 8px;\n    min-height: 80px;\n    min-width: 80px;\n    touch-action: none;\n    flex-shrink: 0;\n  }\n  \n  &:hover {\n    background-color: rgba(255, 255, 255, 0.1);\n    transform: ${props => props.isDragging ? 'translateZ(0)' : 'scale(1.05)'};\n  }\n  \n  ${props => props.isSelected && !props.isDragging && `\n    background-color: rgba(255, 255, 255, 0.2);\n    transform: scale(1.1);\n  `}\n  \n  ${props => props.isDragging && `\n    background-color: rgba(255, 255, 255, 0.15);\n    transform: scale(1.1) translateZ(0);\n    z-index: 9999;\n  `}\n`;\n\nconst IconCircle = styled.div<{ color: string; isImage: boolean }>`\n  width: 64px;\n  height: 64px;\n  border-radius: ${props => props.isImage ? '0' : '50%'};\n  background-color: ${props => props.isImage ? 'transparent' : props.color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 8px;\n  box-shadow: ${props => props.isImage ? 'none' : '0 4px 8px rgba(0, 0, 0, 0.2)'};\n  font-size: ${props => props.isImage ? '0' : '32px'};\n  color: white;\n  font-weight: bold;\n  overflow: hidden;\n  \n  @media (max-width: 768px) {\n    width: 72px;\n    height: 72px;\n    font-size: ${props => props.isImage ? '0' : '36px'};\n  }\n`;\n\nconst IconLabel = styled.div`\n  color: white;\n  text-align: center;\n  font-size: 12px;\n  font-weight: 500;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);\n  max-width: 80px;\n  word-wrap: break-word;\n  \n  @media (max-width: 768px) {\n    font-size: 14px;\n    max-width: 100px;\n    line-height: 1.2;\n  }\n`;\n\nconst Icon: React.FC<IconProps> = ({ icon, onClick, onMove, isSelected = false }) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [dragDistance, setDragDistance] = useState(0);\n  const [touchUsed, setTouchUsed] = useState(false);\n  const [lastClickTime, setLastClickTime] = useState(0);\n  \n  const iconRef = useRef<HTMLDivElement>(null);\n  const isDraggingRef = useRef(false);\n  const dragOffsetRef = useRef({ x: 0, y: 0 });\n  const startPosRef = useRef({ x: 0, y: 0 });\n\n  const isImageIcon = icon.icon.includes('.png') || icon.icon.includes('.jpg') || icon.icon.includes('.jpeg') || icon.icon.includes('.gif');\n\n  // Optimized mouse move handler using refs\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDraggingRef.current) {\n      const newX = e.clientX - dragOffsetRef.current.x;\n      const newY = e.clientY - dragOffsetRef.current.y;\n      \n      // Calculate drag distance to determine if it's a drag or click\n      const distance = Math.sqrt(\n        Math.pow(e.clientX - startPosRef.current.x, 2) + \n        Math.pow(e.clientY - startPosRef.current.y, 2)\n      );\n      setDragDistance(distance);\n      \n      // Use requestAnimationFrame for smooth updates\n      requestAnimationFrame(() => {\n        onMove(icon.id, newX, newY);\n      });\n    }\n  }, [icon.id, onMove]);\n\n  // Optimized mouse up handler\n  const handleMouseUp = useCallback(() => {\n    isDraggingRef.current = false;\n    setIsDragging(false);\n  }, []);\n\n  // Set up event listeners only when dragging\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove, { passive: true });\n      document.addEventListener('mouseup', handleMouseUp, { passive: true });\n      \n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDragging, handleMouseMove, handleMouseUp]);\n\n  const handleMouseDown = useCallback((e: React.MouseEvent) => {\n    // Only start dragging on left mouse button\n    if (e.button !== 0) return;\n    \n    const rect = iconRef.current?.getBoundingClientRect();\n    if (!rect) return;\n    \n    const offsetX = e.clientX - rect.left;\n    const offsetY = e.clientY - rect.top;\n    \n    // Store start position for drag distance calculation\n    startPosRef.current = { x: e.clientX, y: e.clientY };\n    \n    dragOffsetRef.current = { x: offsetX, y: offsetY };\n    setDragOffset({ x: offsetX, y: offsetY });\n    setDragDistance(0);\n    isDraggingRef.current = true;\n    setIsDragging(true);\n    \n    // Prevent text selection during drag\n    e.preventDefault();\n  }, []);\n\n  const handleClick = useCallback((e: React.MouseEvent) => {\n    // Only handle mouse clicks on desktop\n    if (window.innerWidth <= 768) {\n      return;\n    }\n    \n    const now = Date.now();\n    // Only trigger click if we didn't drag (drag distance < 5px) and it's not a rapid double-click\n    if (dragDistance < 5 && (now - lastClickTime) > 300) {\n      setLastClickTime(now);\n      onClick();\n    }\n  }, [onClick, dragDistance, lastClickTime]);\n\n  const handleTouchStart = useCallback((e: React.TouchEvent) => {\n    setTouchUsed(true);\n    const touch = e.touches[0];\n    const rect = iconRef.current?.getBoundingClientRect();\n    if (!rect) return;\n    \n    const offsetX = touch.clientX - rect.left;\n    const offsetY = touch.clientY - rect.top;\n    \n    // Store start position for drag distance calculation\n    startPosRef.current = { x: touch.clientX, y: touch.clientY };\n    \n    dragOffsetRef.current = { x: offsetX, y: offsetY };\n    setDragOffset({ x: offsetX, y: offsetY });\n    setDragDistance(0);\n    isDraggingRef.current = true;\n    setIsDragging(true);\n    \n    // Prevent default touch behavior\n    e.preventDefault();\n  }, []);\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    if (isDraggingRef.current) {\n      const touch = e.touches[0];\n      const newX = touch.clientX - dragOffsetRef.current.x;\n      const newY = touch.clientY - dragOffsetRef.current.y;\n      \n      // Calculate drag distance to determine if it's a drag or tap\n      const distance = Math.sqrt(\n        Math.pow(touch.clientX - startPosRef.current.x, 2) + \n        Math.pow(touch.clientY - startPosRef.current.y, 2)\n      );\n      setDragDistance(distance);\n      \n      // Use requestAnimationFrame for smooth updates\n      requestAnimationFrame(() => {\n        onMove(icon.id, newX, newY);\n      });\n    }\n  }, [icon.id, onMove]);\n\n\n  // Set up touch event listeners\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('touchmove', handleTouchMove, { passive: false });\n      document.addEventListener('touchend', handleTouchEnd, { passive: true });\n      \n      return () => {\n        document.removeEventListener('touchmove', handleTouchMove);\n        document.removeEventListener('touchend', handleTouchEnd);\n      };\n    }\n  }, [isDragging, handleTouchMove, handleTouchEnd]);\n\n  const handleTouchEnd = useCallback((e: React.TouchEvent) => {\n    const now = Date.now();\n    // Only trigger click if we didn't drag (drag distance < 10px for touch) and it's not a rapid double-click\n    if (dragDistance < 10 && (now - lastClickTime) > 300) {\n      setLastClickTime(now);\n      onClick();\n    }\n    \n    isDraggingRef.current = false;\n    setIsDragging(false);\n    // Reset touchUsed after a short delay to allow for proper click handling\n    setTimeout(() => setTouchUsed(false), 100);\n  }, [onClick, dragDistance, lastClickTime]);\n\n  return (\n    <IconContainer \n      ref={iconRef}\n      x={icon.position.x}\n      y={icon.position.y}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onTouchEnd={handleTouchEnd}\n      isSelected={isSelected}\n      isDragging={isDragging}\n    >\n      <IconCircle color={icon.color} isImage={isImageIcon}>\n        {isImageIcon ? (\n          <img \n            src={icon.icon} \n            alt={icon.name}\n            style={{ width: '100%', height: '100%', objectFit: 'contain' }}\n            draggable={false}\n          />\n        ) : (\n          icon.icon\n        )}\n      </IconCircle>\n      <IconLabel>{icon.name}</IconLabel>\n    </IconContainer>\n  );\n};\n\nexport default Icon;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}