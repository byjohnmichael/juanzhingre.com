{"ast":null,"code":"var _jsxFileName = \"/home/johnmichael/Work/JuanZhingre/desktop-website/src/components/Desktop/Desktop.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Icon from '../Icon/Icon';\nimport Window from '../Window/Window';\nimport PhotoGallery from '../Window/PhotoGallery';\nimport CollectionViewer from '../Window/CollectionViewer';\nimport FullImageViewer from '../Window/FullImageViewer';\nimport FolderContent from '../Window/FolderContent';\nimport { photoData } from '../../data/photos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DesktopContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url('/background.png');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  overflow: hidden;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n`;\n_c = DesktopContainer;\nconst BackgroundOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.2);\n  pointer-events: none;\n`;\n_c2 = BackgroundOverlay;\nconst DesktopTitle = styled.div`\n  position: absolute;\n  top: 50px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 48px;\n  font-weight: bold;\n  color: white;\n  text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8);\n  z-index: 1;\n  pointer-events: none;\n`;\nconst Desktop = () => {\n  _s();\n  const [desktopState, setDesktopState] = useState({\n    icons: [{\n      id: 'music',\n      name: 'music',\n      type: 'folder',\n      position: {\n        x: 50,\n        y: 150\n      },\n      icon: '/images/icons/SoundCloud.png',\n      color: '#007AFF'\n    }, {\n      id: 'the-archive',\n      name: 'the archive',\n      type: 'folder',\n      position: {\n        x: 50,\n        y: 280\n      },\n      icon: '/images/icons/WinRAR.png',\n      color: '#8B4513'\n    }, {\n      id: 'sculpter',\n      name: 'sculpter',\n      type: 'folder',\n      position: {\n        x: 50,\n        y: 410\n      },\n      icon: '/images/icons/Air Europa.png',\n      color: '#FF6B6B'\n    }, {\n      id: 'about',\n      name: 'about',\n      type: 'folder',\n      position: {\n        x: 50,\n        y: 540\n      },\n      icon: '/images/icons/Toggl Hire.png',\n      color: '#4CAF50'\n    }, {\n      id: 'trash',\n      name: 'trash',\n      type: 'folder',\n      position: {\n        x: window.innerWidth - 150,\n        y: window.innerHeight - 150\n      },\n      icon: '🗑️',\n      color: '#808080'\n    }],\n    windows: [],\n    activeWindowId: null,\n    background: 'dog-pattern'\n  });\n  const handleIconMove = useCallback((iconId, x, y) => {\n    setDesktopState(prev => {\n      const iconIndex = prev.icons.findIndex(icon => icon.id === iconId);\n      if (iconIndex === -1) return prev;\n      const newIcons = [...prev.icons];\n      newIcons[iconIndex] = {\n        ...newIcons[iconIndex],\n        position: {\n          x,\n          y\n        }\n      };\n      return {\n        ...prev,\n        icons: newIcons\n      };\n    });\n  }, []);\n  const handleOpenCollection = useCallback(collection => {\n    const newWindow = {\n      id: `collection-${collection.id}`,\n      title: `${collection.name} - Photos`,\n      type: 'folder',\n      position: {\n        x: 150,\n        y: 150\n      },\n      size: {\n        width: 1000,\n        height: 700\n      },\n      isMinimized: false,\n      isMaximized: false,\n      isOpen: true,\n      zIndex: Date.now(),\n      content: /*#__PURE__*/_jsxDEV(CollectionViewer, {\n        collection: collection,\n        onOpenPhoto: photo => handleOpenPhoto(photo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 16\n      }, this)\n    };\n    setDesktopState(prev => ({\n      ...prev,\n      windows: [...prev.windows, newWindow],\n      activeWindowId: newWindow.id\n    }));\n  }, []);\n  const handleOpenPhoto = useCallback(photo => {\n    const newWindow = {\n      id: `photo-${photo.id}`,\n      title: `${photo.name} - Full View`,\n      type: 'app',\n      position: {\n        x: 200,\n        y: 200\n      },\n      size: {\n        width: 900,\n        height: 700\n      },\n      isMinimized: false,\n      isMaximized: false,\n      isOpen: true,\n      zIndex: Date.now(),\n      content: /*#__PURE__*/_jsxDEV(FullImageViewer, {\n        photo: photo,\n        onClose: () => handleWindowClose(`photo-${photo.id}`),\n        onNavigate: direction => handlePhotoNavigate(photo, direction)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 16\n      }, this)\n    };\n    setDesktopState(prev => ({\n      ...prev,\n      windows: [...prev.windows, newWindow],\n      activeWindowId: newWindow.id\n    }));\n  }, []);\n  const handlePhotoNavigate = useCallback((currentPhoto, direction) => {\n    // Find the next/previous photo in the same collection\n    const photos = photoData.filter(p => p.collection === currentPhoto.collection);\n    const currentIndex = photos.findIndex(p => p.id === currentPhoto.id);\n    let newIndex = direction === 'next' ? currentIndex + 1 : currentIndex - 1;\n\n    // Wrap around\n    if (newIndex < 0) newIndex = photos.length - 1;\n    if (newIndex >= photos.length) newIndex = 0;\n    const newPhoto = photos[newIndex];\n\n    // Update the current photo window with the new photo\n    setDesktopState(prev => {\n      const newWindows = prev.windows.map(w => {\n        if (w.id === `photo-${currentPhoto.id}`) {\n          return {\n            ...w,\n            title: `${newPhoto.name} - Full View`,\n            content: /*#__PURE__*/_jsxDEV(FullImageViewer, {\n              photo: newPhoto,\n              onClose: () => handleWindowClose(w.id),\n              onNavigate: dir => handlePhotoNavigate(newPhoto, dir)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 22\n            }, this)\n          };\n        }\n        return w;\n      });\n      return {\n        ...prev,\n        windows: newWindows\n      };\n    });\n  }, []);\n  const handleIconClick = useCallback(icon => {\n    if (icon.id === 'the-archive') {\n      // Open photo gallery for the Archive icon\n      const newWindow = {\n        id: `window-${icon.id}`,\n        title: 'Photo Gallery',\n        type: 'app',\n        position: {\n          x: 100,\n          y: 100\n        },\n        size: {\n          width: 1000,\n          height: 700\n        },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: /*#__PURE__*/_jsxDEV(PhotoGallery, {\n          onOpenCollection: handleOpenCollection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 18\n        }, this)\n      };\n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.type === 'folder') {\n      // Open folder window with custom content\n      const newWindow = {\n        id: `window-${icon.id}`,\n        title: icon.name,\n        type: 'folder',\n        position: {\n          x: 100,\n          y: 100\n        },\n        size: {\n          width: 600,\n          height: 400\n        },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: /*#__PURE__*/_jsxDEV(FolderContent, {\n          folderId: icon.id,\n          folderName: icon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 18\n        }, this)\n      };\n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.type === 'app') {\n      // Open app window\n      const newWindow = {\n        id: `window-${icon.id}`,\n        title: icon.name,\n        type: 'app',\n        position: {\n          x: 150,\n          y: 150\n        },\n        size: {\n          width: 800,\n          height: 600\n        },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Welcome to \", icon.name, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 18\n        }, this)\n      };\n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    }\n  }, []);\n  const handleWindowClose = useCallback(windowId => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.filter(w => w.id !== windowId),\n      activeWindowId: prev.activeWindowId === windowId ? null : prev.activeWindowId\n    }));\n  }, []);\n  const handleWindowMinimize = useCallback(windowId => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => w.id === windowId ? {\n        ...w,\n        isMinimized: !w.isMinimized\n      } : w)\n    }));\n  }, []);\n  const handleWindowMaximize = useCallback(windowId => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => w.id === windowId ? {\n        ...w,\n        isMaximized: !w.isMaximized\n      } : w)\n    }));\n  }, []);\n  const handleWindowMove = useCallback((windowId, x, y) => {\n    // Use functional update to avoid stale state issues\n    setDesktopState(prev => {\n      const windowIndex = prev.windows.findIndex(w => w.id === windowId);\n      if (windowIndex === -1) return prev;\n      const newWindows = [...prev.windows];\n      newWindows[windowIndex] = {\n        ...newWindows[windowIndex],\n        position: {\n          x,\n          y\n        }\n      };\n      return {\n        ...prev,\n        windows: newWindows\n      };\n    });\n  }, []);\n  const handleWindowResize = useCallback((windowId, width, height) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => w.id === windowId ? {\n        ...w,\n        size: {\n          width,\n          height\n        }\n      } : w)\n    }));\n  }, []);\n  const handleWindowFocus = useCallback(windowId => {\n    setDesktopState(prev => ({\n      ...prev,\n      activeWindowId: windowId,\n      windows: prev.windows.map(w => ({\n        ...w,\n        zIndex: w.id === windowId ? Date.now() : w.zIndex\n      }))\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DesktopContainer, {\n    children: [/*#__PURE__*/_jsxDEV(BackgroundOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), desktopState.icons.map(icon => /*#__PURE__*/_jsxDEV(Icon, {\n      icon: icon,\n      onClick: () => handleIconClick(icon),\n      onMove: handleIconMove,\n      isSelected: false\n    }, icon.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }, this)), desktopState.windows.map(window => /*#__PURE__*/_jsxDEV(Window, {\n      window: window,\n      onClose: handleWindowClose,\n      onMinimize: handleWindowMinimize,\n      onMaximize: handleWindowMaximize,\n      onMove: handleWindowMove,\n      onResize: handleWindowResize,\n      onFocus: handleWindowFocus,\n      children: window.content\n    }, window.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n};\n_s(Desktop, \"WF/jHL0rnIkSF90NHnF6JXEw+1o=\");\n_c3 = Desktop;\nexport default Desktop;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DesktopContainer\");\n$RefreshReg$(_c2, \"BackgroundOverlay\");\n$RefreshReg$(_c3, \"Desktop\");","map":{"version":3,"names":["React","useState","useCallback","styled","Icon","Window","PhotoGallery","CollectionViewer","FullImageViewer","FolderContent","photoData","jsxDEV","_jsxDEV","DesktopContainer","div","_c","BackgroundOverlay","_c2","DesktopTitle","Desktop","_s","desktopState","setDesktopState","icons","id","name","type","position","x","y","icon","color","window","innerWidth","innerHeight","windows","activeWindowId","background","handleIconMove","iconId","prev","iconIndex","findIndex","newIcons","handleOpenCollection","collection","newWindow","title","size","width","height","isMinimized","isMaximized","isOpen","zIndex","Date","now","content","onOpenPhoto","photo","handleOpenPhoto","fileName","_jsxFileName","lineNumber","columnNumber","onClose","handleWindowClose","onNavigate","direction","handlePhotoNavigate","currentPhoto","photos","filter","p","currentIndex","newIndex","length","newPhoto","newWindows","map","w","dir","handleIconClick","onOpenCollection","folderId","folderName","children","windowId","handleWindowMinimize","handleWindowMaximize","handleWindowMove","windowIndex","handleWindowResize","handleWindowFocus","onClick","onMove","isSelected","onMinimize","onMaximize","onResize","onFocus","_c3","$RefreshReg$"],"sources":["/home/johnmichael/Work/JuanZhingre/desktop-website/src/components/Desktop/Desktop.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Icon from '../Icon/Icon';\nimport Window from '../Window/Window';\nimport SimpleGame from '../Window/SimpleGame';\nimport PhotoGallery from '../Window/PhotoGallery';\nimport CollectionViewer from '../Window/CollectionViewer';\nimport FullImageViewer from '../Window/FullImageViewer';\nimport FolderContent from '../Window/FolderContent';\nimport { Icon as IconType, Window as WindowType, DesktopState } from '../../types/desktop';\nimport { photoData } from '../../data/photos';\n\nconst DesktopContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url('/background.png');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  overflow: hidden;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n`;\n\nconst BackgroundOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.2);\n  pointer-events: none;\n`;\n\nconst DesktopTitle = styled.div`\n  position: absolute;\n  top: 50px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 48px;\n  font-weight: bold;\n  color: white;\n  text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8);\n  z-index: 1;\n  pointer-events: none;\n`;\n\nconst Desktop: React.FC = () => {\n  const [desktopState, setDesktopState] = useState<DesktopState>({\n          icons: [\n        {\n          id: 'music',\n          name: 'music',\n          type: 'folder',\n          position: { x: 50, y: 150 },\n          icon: '/images/icons/SoundCloud.png',\n          color: '#007AFF'\n        },\n        {\n          id: 'the-archive',\n          name: 'the archive',\n          type: 'folder',\n          position: { x: 50, y: 280 },\n          icon: '/images/icons/WinRAR.png',\n          color: '#8B4513'\n        },\n        {\n          id: 'sculpter',\n          name: 'sculpter',\n          type: 'folder',\n          position: { x: 50, y: 410 },\n          icon: '/images/icons/Air Europa.png',\n          color: '#FF6B6B'\n        },\n        {\n          id: 'about',\n          name: 'about',\n          type: 'folder',\n          position: { x: 50, y: 540 },\n          icon: '/images/icons/Toggl Hire.png',\n          color: '#4CAF50'\n        },\n        {\n          id: 'trash',\n          name: 'trash',\n          type: 'folder',\n          position: { x: window.innerWidth - 150, y: window.innerHeight - 150 },\n          icon: '🗑️',\n          color: '#808080'\n        }\n      ],\n    windows: [],\n    activeWindowId: null,\n    background: 'dog-pattern'\n  });\n\n  const handleIconMove = useCallback((iconId: string, x: number, y: number) => {\n    setDesktopState(prev => {\n      const iconIndex = prev.icons.findIndex(icon => icon.id === iconId);\n      if (iconIndex === -1) return prev;\n      \n      const newIcons = [...prev.icons];\n      newIcons[iconIndex] = {\n        ...newIcons[iconIndex],\n        position: { x, y }\n      };\n      \n      return {\n        ...prev,\n        icons: newIcons\n      };\n    });\n  }, []);\n\n  const handleOpenCollection = useCallback((collection: any) => {\n    const newWindow: WindowType = {\n      id: `collection-${collection.id}`,\n      title: `${collection.name} - Photos`,\n      type: 'folder',\n      position: { x: 150, y: 150 },\n      size: { width: 1000, height: 700 },\n      isMinimized: false,\n      isMaximized: false,\n      isOpen: true,\n      zIndex: Date.now(),\n      content: <CollectionViewer collection={collection} onOpenPhoto={(photo) => handleOpenPhoto(photo)} />\n    };\n    \n    setDesktopState(prev => ({\n      ...prev,\n      windows: [...prev.windows, newWindow],\n      activeWindowId: newWindow.id\n    }));\n  }, []);\n\n  const handleOpenPhoto = useCallback((photo: any) => {\n    const newWindow: WindowType = {\n      id: `photo-${photo.id}`,\n      title: `${photo.name} - Full View`,\n      type: 'app',\n      position: { x: 200, y: 200 },\n      size: { width: 900, height: 700 },\n      isMinimized: false,\n      isMaximized: false,\n      isOpen: true,\n      zIndex: Date.now(),\n      content: <FullImageViewer \n        photo={photo} \n        onClose={() => handleWindowClose(`photo-${photo.id}`)}\n        onNavigate={(direction) => handlePhotoNavigate(photo, direction)}\n      />\n    };\n    \n    setDesktopState(prev => ({\n      ...prev,\n      windows: [...prev.windows, newWindow],\n      activeWindowId: newWindow.id\n    }));\n  }, []);\n\n  const handlePhotoNavigate = useCallback((currentPhoto: any, direction: 'prev' | 'next') => {\n    // Find the next/previous photo in the same collection\n    const photos = photoData.filter(p => p.collection === currentPhoto.collection);\n    const currentIndex = photos.findIndex(p => p.id === currentPhoto.id);\n    let newIndex = direction === 'next' ? currentIndex + 1 : currentIndex - 1;\n    \n    // Wrap around\n    if (newIndex < 0) newIndex = photos.length - 1;\n    if (newIndex >= photos.length) newIndex = 0;\n    \n    const newPhoto = photos[newIndex];\n    \n    // Update the current photo window with the new photo\n    setDesktopState(prev => {\n      const newWindows = prev.windows.map(w => {\n        if (w.id === `photo-${currentPhoto.id}`) {\n          return {\n            ...w,\n            title: `${newPhoto.name} - Full View`,\n            content: <FullImageViewer \n              photo={newPhoto} \n              onClose={() => handleWindowClose(w.id)}\n              onNavigate={(dir) => handlePhotoNavigate(newPhoto, dir)}\n            />\n          };\n        }\n        return w;\n      });\n      \n      return {\n        ...prev,\n        windows: newWindows\n      };\n    });\n  }, []);\n\n  const handleIconClick = useCallback((icon: IconType) => {\n    if (icon.id === 'the-archive') {\n      // Open photo gallery for the Archive icon\n      const newWindow: WindowType = {\n        id: `window-${icon.id}`,\n        title: 'Photo Gallery',\n        type: 'app',\n        position: { x: 100, y: 100 },\n        size: { width: 1000, height: 700 },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: <PhotoGallery onOpenCollection={handleOpenCollection} />\n      };\n      \n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.type === 'folder') {\n      // Open folder window with custom content\n      const newWindow: WindowType = {\n        id: `window-${icon.id}`,\n        title: icon.name,\n        type: 'folder',\n        position: { x: 100, y: 100 },\n        size: { width: 600, height: 400 },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: <FolderContent folderId={icon.id} folderName={icon.name} />\n      };\n      \n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.type === 'app') {\n      // Open app window\n      const newWindow: WindowType = {\n        id: `window-${icon.id}`,\n        title: icon.name,\n        type: 'app',\n        position: { x: 150, y: 150 },\n        size: { width: 800, height: 600 },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: <div>Welcome to {icon.name}!</div>\n      };\n      \n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    }\n  }, []);\n\n  const handleWindowClose = useCallback((windowId: string) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.filter(w => w.id !== windowId),\n      activeWindowId: prev.activeWindowId === windowId ? null : prev.activeWindowId\n    }));\n  }, []);\n\n  const handleWindowMinimize = useCallback((windowId: string) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => \n        w.id === windowId ? { ...w, isMinimized: !w.isMinimized } : w\n      )\n    }));\n  }, []);\n\n  const handleWindowMaximize = useCallback((windowId: string) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => \n        w.id === windowId ? { ...w, isMaximized: !w.isMaximized } : w\n      )\n    }));\n  }, []);\n\n  const handleWindowMove = useCallback((windowId: string, x: number, y: number) => {\n    // Use functional update to avoid stale state issues\n    setDesktopState(prev => {\n      const windowIndex = prev.windows.findIndex(w => w.id === windowId);\n      if (windowIndex === -1) return prev;\n      \n      const newWindows = [...prev.windows];\n      newWindows[windowIndex] = {\n        ...newWindows[windowIndex],\n        position: { x, y }\n      };\n      \n      return {\n        ...prev,\n        windows: newWindows\n      };\n    });\n  }, []);\n\n  const handleWindowResize = useCallback((windowId: string, width: number, height: number) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => \n        w.id === windowId ? { ...w, size: { width, height } } : w\n      )\n    }));\n  }, []);\n\n  const handleWindowFocus = useCallback((windowId: string) => {\n    setDesktopState(prev => ({\n      ...prev,\n      activeWindowId: windowId,\n      windows: prev.windows.map(w => ({\n        ...w,\n        zIndex: w.id === windowId ? Date.now() : w.zIndex\n      }))\n    }));\n  }, []);\n\n  return (\n    <DesktopContainer>\n      <BackgroundOverlay />\n      \n      {/* Desktop Icons */}\n      {desktopState.icons.map(icon => (\n        <Icon\n          key={icon.id}\n          icon={icon}\n          onClick={() => handleIconClick(icon)}\n          onMove={handleIconMove}\n          isSelected={false}\n        />\n      ))}\n      \n      {/* Windows */}\n      {desktopState.windows.map(window => (\n        <Window\n          key={window.id}\n          window={window}\n          onClose={handleWindowClose}\n          onMinimize={handleWindowMinimize}\n          onMaximize={handleWindowMaximize}\n          onMove={handleWindowMove}\n          onResize={handleWindowResize}\n          onFocus={handleWindowFocus}\n        >\n          {window.content}\n        </Window>\n      ))}\n    </DesktopContainer>\n  );\n};\n\nexport default Desktop;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}