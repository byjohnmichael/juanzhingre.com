{"ast":null,"code":"var _jsxFileName = \"/home/johnmichael/Work/JuanZhingre/desktop-website/src/components/Desktop/Desktop.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Icon from '../Icon/Icon';\nimport Window from '../Window/Window';\nimport SimpleGame from '../Window/SimpleGame';\nimport PhotoGallery from '../Window/PhotoGallery';\nimport CollectionViewer from '../Window/CollectionViewer';\nimport FullImageViewer from '../Window/FullImageViewer';\nimport FolderContent from '../Window/FolderContent';\nimport { photoData } from '../../data/photos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DesktopContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url('/background.png');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  overflow: hidden;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n`;\n_c = DesktopContainer;\nconst Taskbar = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 40px;\n  background: linear-gradient(to bottom, #c0c0c0 0%, #a0a0a0 100%);\n  border-top: 2px solid #ffffff;\n  border-left: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  display: flex;\n  align-items: center;\n  padding: 0 4px;\n  z-index: 1000;\n  box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.2);\n`;\n_c2 = Taskbar;\nconst StartButton = styled.button`\n  width: 80px;\n  height: 32px;\n  background: linear-gradient(to bottom, #c0c0c0 0%, #a0a0a0 100%);\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 8px;\n  margin-right: 8px;\n  box-shadow: inset 1px 1px 0px rgba(255, 255, 255, 0.3);\n  \n  &:active {\n    background: linear-gradient(to bottom, #a0a0a0 0%, #c0c0c0 100%);\n    border: 2px solid #808080;\n    border-right: 2px solid #ffffff;\n    border-bottom: 2px solid #ffffff;\n    border-left: 2px solid #808080;\n    box-shadow: inset 1px 1px 0px rgba(0, 0, 0, 0.3);\n  }\n`;\n_c3 = StartButton;\nconst TaskbarItems = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  flex: 1;\n`;\n_c4 = TaskbarItems;\nconst TaskbarItem = styled.div`\n  height: 28px;\n  min-width: 120px;\n  background: ${props => props.isActive ? 'linear-gradient(to bottom, #ffffff 0%, #e0e0e0 100%)' : 'linear-gradient(to bottom, #e0e0e0 0%, #c0c0c0 100%)'};\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n  cursor: pointer;\n  font-size: 11px;\n  color: #000;\n  box-shadow: ${props => props.isActive ? 'inset 1px 1px 0px rgba(0, 0, 0, 0.1)' : 'inset 1px 1px 0px rgba(255, 255, 255, 0.3)'};\n  \n  &:hover {\n    background: linear-gradient(to bottom, #f0f0f0 0%, #d0d0d0 100%);\n  }\n`;\n_c5 = TaskbarItem;\nconst StartMenu = styled.div`\n  position: fixed;\n  bottom: 40px;\n  left: 4px;\n  width: 200px;\n  background: #c0c0c0;\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.3);\n  z-index: 1001;\n  display: ${props => props.isOpen ? 'block' : 'none'};\n`;\n_c6 = StartMenu;\nconst StartMenuItem = styled.div`\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 12px;\n  color: #000;\n  \n  &:hover {\n    background: #000080;\n    color: white;\n  }\n`;\n_c7 = StartMenuItem;\nconst Clock = styled.div`\n  height: 28px;\n  min-width: 80px;\n  background: linear-gradient(to bottom, #e0e0e0 0%, #c0c0c0 100%);\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 11px;\n  color: #000;\n  font-weight: bold;\n  box-shadow: inset 1px 1px 0px rgba(255, 255, 255, 0.3);\n  margin-left: auto;\n`;\nconst BackgroundOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.2);\n  pointer-events: none;\n`;\n_c8 = BackgroundOverlay;\nconst DesktopTitle = styled.div`\n  position: absolute;\n  top: 50px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 48px;\n  font-weight: bold;\n  color: white;\n  text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8);\n  z-index: 1;\n  pointer-events: none;\n`;\nconst Desktop = () => {\n  _s();\n  const [isStartMenuOpen, setIsStartMenuOpen] = useState(false);\n  const [currentTime, setCurrentTime] = useState('');\n  const [desktopState, setDesktopState] = useState({\n    icons: [{\n      id: 'music',\n      name: 'music',\n      type: 'folder',\n      position: {\n        x: 50,\n        y: 150\n      },\n      icon: '/icons/music.png',\n      color: '#007AFF'\n    }, {\n      id: 'the-archive',\n      name: 'ishv4ra',\n      type: 'folder',\n      position: {\n        x: 50,\n        y: 280\n      },\n      icon: '/icons/ishv4ra.png',\n      color: '#8B4513'\n    }, {\n      id: 'sculpter',\n      name: 'playday cuts',\n      type: 'folder',\n      position: {\n        x: 50,\n        y: 410\n      },\n      icon: '/icons/playdaycuts.png',\n      color: '#FF6B6B'\n    }],\n    windows: [],\n    activeWindowId: null,\n    background: 'dog-pattern'\n  });\n  const handleIconMove = useCallback((iconId, x, y) => {\n    setDesktopState(prev => {\n      const iconIndex = prev.icons.findIndex(icon => icon.id === iconId);\n      if (iconIndex === -1) return prev;\n      const newIcons = [...prev.icons];\n      newIcons[iconIndex] = {\n        ...newIcons[iconIndex],\n        position: {\n          x,\n          y\n        }\n      };\n      return {\n        ...prev,\n        icons: newIcons\n      };\n    });\n  }, []);\n  const handleOpenCollection = useCallback(collection => {\n    const newWindow = {\n      id: `collection-${collection.id}`,\n      title: `${collection.name} - Photos`,\n      type: 'folder',\n      position: {\n        x: 150,\n        y: 150\n      },\n      size: {\n        width: 1000,\n        height: 700\n      },\n      isMinimized: false,\n      isMaximized: false,\n      isOpen: true,\n      zIndex: Date.now(),\n      content: /*#__PURE__*/_jsxDEV(CollectionViewer, {\n        collection: collection,\n        onOpenPhoto: photo => handleOpenPhoto(photo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 16\n      }, this)\n    };\n    setDesktopState(prev => ({\n      ...prev,\n      windows: [...prev.windows, newWindow],\n      activeWindowId: newWindow.id\n    }));\n  }, []);\n  const handleOpenPhoto = useCallback(photo => {\n    const newWindow = {\n      id: `photo-${photo.id}`,\n      title: `${photo.name} - Full View`,\n      type: 'app',\n      position: {\n        x: 200,\n        y: 200\n      },\n      size: {\n        width: 900,\n        height: 700\n      },\n      isMinimized: false,\n      isMaximized: false,\n      isOpen: true,\n      zIndex: Date.now(),\n      content: /*#__PURE__*/_jsxDEV(FullImageViewer, {\n        photo: photo,\n        onClose: () => handleWindowClose(`photo-${photo.id}`),\n        onNavigate: direction => handlePhotoNavigate(photo, direction)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 16\n      }, this)\n    };\n    setDesktopState(prev => ({\n      ...prev,\n      windows: [...prev.windows, newWindow],\n      activeWindowId: newWindow.id\n    }));\n  }, []);\n  const handlePhotoNavigate = useCallback((currentPhoto, direction) => {\n    // Find the next/previous photo in the same collection\n    const photos = photoData.filter(p => p.collection === currentPhoto.collection);\n    const currentIndex = photos.findIndex(p => p.id === currentPhoto.id);\n    let newIndex = direction === 'next' ? currentIndex + 1 : currentIndex - 1;\n\n    // Wrap around\n    if (newIndex < 0) newIndex = photos.length - 1;\n    if (newIndex >= photos.length) newIndex = 0;\n    const newPhoto = photos[newIndex];\n\n    // Update the current photo window with the new photo\n    setDesktopState(prev => {\n      const newWindows = prev.windows.map(w => {\n        if (w.id === `photo-${currentPhoto.id}`) {\n          return {\n            ...w,\n            title: `${newPhoto.name} - Full View`,\n            content: /*#__PURE__*/_jsxDEV(FullImageViewer, {\n              photo: newPhoto,\n              onClose: () => handleWindowClose(w.id),\n              onNavigate: dir => handlePhotoNavigate(newPhoto, dir)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 22\n            }, this)\n          };\n        }\n        return w;\n      });\n      return {\n        ...prev,\n        windows: newWindows\n      };\n    });\n  }, []);\n  const handleIconClick = useCallback(icon => {\n    // Check if app is already running\n    const existingWindow = desktopState.windows.find(window => window.id.startsWith(`${icon.id}-`) || window.id === `window-${icon.id}`);\n    if (existingWindow) {\n      // If app is already running, bring it to focus and unminimize if needed\n      if (existingWindow.isMinimized) {\n        setDesktopState(prev => ({\n          ...prev,\n          windows: prev.windows.map(w => w.id === existingWindow.id ? {\n            ...w,\n            isMinimized: false\n          } : w),\n          activeWindowId: existingWindow.id\n        }));\n      } else {\n        // Just bring to focus\n        setDesktopState(prev => ({\n          ...prev,\n          activeWindowId: existingWindow.id,\n          windows: prev.windows.map(w => ({\n            ...w,\n            zIndex: w.id === existingWindow.id ? Date.now() : w.zIndex\n          }))\n        }));\n      }\n      return;\n    }\n    if (icon.id === 'music') {\n      // Open music window\n      const newWindow = {\n        id: `music-${Date.now()}`,\n        title: 'Music',\n        type: 'app',\n        position: {\n          x: 150,\n          y: 150\n        },\n        size: {\n          width: 800,\n          height: 600\n        },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: /*#__PURE__*/_jsxDEV(SimpleGame, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 18\n        }, this)\n      };\n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.id === 'the-archive') {\n      // Open photo gallery for the Archive icon\n      const newWindow = {\n        id: `window-${icon.id}`,\n        title: 'Photo Gallery',\n        type: 'app',\n        position: {\n          x: 100,\n          y: 100\n        },\n        size: {\n          width: 1000,\n          height: 700\n        },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: /*#__PURE__*/_jsxDEV(PhotoGallery, {\n          onOpenCollection: handleOpenCollection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 18\n        }, this)\n      };\n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.type === 'folder') {\n      // Open folder window with custom content\n      const newWindow = {\n        id: `window-${icon.id}`,\n        title: icon.name,\n        type: 'folder',\n        position: {\n          x: 100,\n          y: 100\n        },\n        size: {\n          width: 600,\n          height: 400\n        },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: /*#__PURE__*/_jsxDEV(FolderContent, {\n          folderId: icon.id,\n          folderName: icon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 18\n        }, this)\n      };\n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.type === 'app') {\n      // Open app window\n      const newWindow = {\n        id: `window-${icon.id}`,\n        title: icon.name,\n        type: 'app',\n        position: {\n          x: 150,\n          y: 150\n        },\n        size: {\n          width: 800,\n          height: 600\n        },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Welcome to \", icon.name, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 18\n        }, this)\n      };\n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    }\n  }, [desktopState.windows]);\n  const handleWindowClose = useCallback(windowId => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.filter(w => w.id !== windowId),\n      activeWindowId: prev.activeWindowId === windowId ? null : prev.activeWindowId\n    }));\n  }, []);\n  const handleWindowMinimize = useCallback(windowId => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => w.id === windowId ? {\n        ...w,\n        isMinimized: !w.isMinimized\n      } : w)\n    }));\n  }, []);\n  const handleWindowMaximize = useCallback(windowId => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => w.id === windowId ? {\n        ...w,\n        isMaximized: !w.isMaximized\n      } : w)\n    }));\n  }, []);\n  const handleWindowMove = useCallback((windowId, x, y) => {\n    // Use functional update to avoid stale state issues\n    setDesktopState(prev => {\n      const windowIndex = prev.windows.findIndex(w => w.id === windowId);\n      if (windowIndex === -1) return prev;\n      const newWindows = [...prev.windows];\n      newWindows[windowIndex] = {\n        ...newWindows[windowIndex],\n        position: {\n          x,\n          y\n        }\n      };\n      return {\n        ...prev,\n        windows: newWindows\n      };\n    });\n  }, []);\n  const handleWindowResize = useCallback((windowId, width, height) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => w.id === windowId ? {\n        ...w,\n        size: {\n          width,\n          height\n        }\n      } : w)\n    }));\n  }, []);\n  const handleDesktopClick = useCallback(() => {\n    setIsStartMenuOpen(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DesktopContainer, {\n    onClick: handleDesktopClick,\n    children: [/*#__PURE__*/_jsxDEV(BackgroundOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this), desktopState.icons.map(icon => /*#__PURE__*/_jsxDEV(Icon, {\n      icon: icon,\n      onClick: () => handleIconClick(icon),\n      onMove: handleIconMove,\n      isSelected: false\n    }, icon.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 9\n    }, this)), desktopState.windows.map(window => /*#__PURE__*/_jsxDEV(Window, {\n      window: window,\n      onClose: handleWindowClose,\n      onMinimize: handleWindowMinimize,\n      onMaximize: handleWindowMaximize,\n      onMove: handleWindowMove,\n      onResize: handleWindowResize,\n      onFocus: windowId => {\n        setDesktopState(prev => ({\n          ...prev,\n          activeWindowId: windowId,\n          windows: prev.windows.map(w => ({\n            ...w,\n            zIndex: w.id === windowId ? Date.now() : w.zIndex\n          }))\n        }));\n      },\n      children: window.content\n    }, window.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Taskbar, {\n      children: [/*#__PURE__*/_jsxDEV(StartButton, {\n        onClick: () => setIsStartMenuOpen(!isStartMenuOpen),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/icons/startmenu.png\",\n          alt: \"Start\",\n          style: {\n            width: '16px',\n            height: '16px',\n            imageRendering: 'pixelated'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'white',\n            fontWeight: 'bold',\n            fontSize: '12px',\n            textShadow: '1px 1px 1px rgba(0, 0, 0, 0.5)'\n          },\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskbarItems, {\n        children: desktopState.windows.filter(window => !window.isMinimized).map(window => /*#__PURE__*/_jsxDEV(TaskbarItem, {\n          isActive: desktopState.activeWindowId === window.id,\n          onClick: () => {\n            setDesktopState(prev => ({\n              ...prev,\n              activeWindowId: window.id,\n              windows: prev.windows.map(w => ({\n                ...w,\n                zIndex: w.id === window.id ? Date.now() : w.zIndex\n              }))\n            }));\n          },\n          children: window.title\n        }, window.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StartMenu, {\n      isOpen: isStartMenuOpen,\n      children: [/*#__PURE__*/_jsxDEV(StartMenuItem, {\n        onClick: () => setIsStartMenuOpen(false),\n        children: \"Shut Down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StartMenuItem, {\n        onClick: () => setIsStartMenuOpen(false),\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StartMenuItem, {\n        onClick: () => setIsStartMenuOpen(false),\n        children: \"Log Off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 478,\n    columnNumber: 5\n  }, this);\n};\n_s(Desktop, \"VF+S3RzYIGyiPbzeVepxnWRK/dg=\");\n_c9 = Desktop;\nexport default Desktop;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"DesktopContainer\");\n$RefreshReg$(_c2, \"Taskbar\");\n$RefreshReg$(_c3, \"StartButton\");\n$RefreshReg$(_c4, \"TaskbarItems\");\n$RefreshReg$(_c5, \"TaskbarItem\");\n$RefreshReg$(_c6, \"StartMenu\");\n$RefreshReg$(_c7, \"StartMenuItem\");\n$RefreshReg$(_c8, \"BackgroundOverlay\");\n$RefreshReg$(_c9, \"Desktop\");","map":{"version":3,"names":["React","useState","useCallback","styled","Icon","Window","SimpleGame","PhotoGallery","CollectionViewer","FullImageViewer","FolderContent","photoData","jsxDEV","_jsxDEV","DesktopContainer","div","_c","Taskbar","_c2","StartButton","button","_c3","TaskbarItems","_c4","TaskbarItem","props","isActive","_c5","StartMenu","isOpen","_c6","StartMenuItem","_c7","Clock","BackgroundOverlay","_c8","DesktopTitle","Desktop","_s","isStartMenuOpen","setIsStartMenuOpen","currentTime","setCurrentTime","desktopState","setDesktopState","icons","id","name","type","position","x","y","icon","color","windows","activeWindowId","background","handleIconMove","iconId","prev","iconIndex","findIndex","newIcons","handleOpenCollection","collection","newWindow","title","size","width","height","isMinimized","isMaximized","zIndex","Date","now","content","onOpenPhoto","photo","handleOpenPhoto","fileName","_jsxFileName","lineNumber","columnNumber","onClose","handleWindowClose","onNavigate","direction","handlePhotoNavigate","currentPhoto","photos","filter","p","currentIndex","newIndex","length","newPhoto","newWindows","map","w","dir","handleIconClick","existingWindow","find","window","startsWith","onOpenCollection","folderId","folderName","children","windowId","handleWindowMinimize","handleWindowMaximize","handleWindowMove","windowIndex","handleWindowResize","handleDesktopClick","onClick","onMove","isSelected","onMinimize","onMaximize","onResize","onFocus","src","alt","style","imageRendering","fontWeight","fontSize","textShadow","_c9","$RefreshReg$"],"sources":["/home/johnmichael/Work/JuanZhingre/desktop-website/src/components/Desktop/Desktop.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Icon from '../Icon/Icon';\nimport Window from '../Window/Window';\nimport SimpleGame from '../Window/SimpleGame';\nimport PhotoGallery from '../Window/PhotoGallery';\nimport CollectionViewer from '../Window/CollectionViewer';\nimport FullImageViewer from '../Window/FullImageViewer';\nimport FolderContent from '../Window/FolderContent';\nimport { Icon as IconType, Window as WindowType, DesktopState } from '../../types/desktop';\nimport { photoData } from '../../data/photos';\n\nconst DesktopContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url('/background.png');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  overflow: hidden;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n`;\n\nconst Taskbar = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 40px;\n  background: linear-gradient(to bottom, #c0c0c0 0%, #a0a0a0 100%);\n  border-top: 2px solid #ffffff;\n  border-left: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  display: flex;\n  align-items: center;\n  padding: 0 4px;\n  z-index: 1000;\n  box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.2);\n`;\n\nconst StartButton = styled.button`\n  width: 80px;\n  height: 32px;\n  background: linear-gradient(to bottom, #c0c0c0 0%, #a0a0a0 100%);\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 8px;\n  margin-right: 8px;\n  box-shadow: inset 1px 1px 0px rgba(255, 255, 255, 0.3);\n  \n  &:active {\n    background: linear-gradient(to bottom, #a0a0a0 0%, #c0c0c0 100%);\n    border: 2px solid #808080;\n    border-right: 2px solid #ffffff;\n    border-bottom: 2px solid #ffffff;\n    border-left: 2px solid #808080;\n    box-shadow: inset 1px 1px 0px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst TaskbarItems = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  flex: 1;\n`;\n\nconst TaskbarItem = styled.div<{ isActive: boolean }>`\n  height: 28px;\n  min-width: 120px;\n  background: ${props => props.isActive \n    ? 'linear-gradient(to bottom, #ffffff 0%, #e0e0e0 100%)' \n    : 'linear-gradient(to bottom, #e0e0e0 0%, #c0c0c0 100%)'\n  };\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n  cursor: pointer;\n  font-size: 11px;\n  color: #000;\n  box-shadow: ${props => props.isActive \n    ? 'inset 1px 1px 0px rgba(0, 0, 0, 0.1)' \n    : 'inset 1px 1px 0px rgba(255, 255, 255, 0.3)'\n  };\n  \n  &:hover {\n    background: linear-gradient(to bottom, #f0f0f0 0%, #d0d0d0 100%);\n  }\n`;\n\nconst StartMenu = styled.div<{ isOpen: boolean }>`\n  position: fixed;\n  bottom: 40px;\n  left: 4px;\n  width: 200px;\n  background: #c0c0c0;\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.3);\n  z-index: 1001;\n  display: ${props => props.isOpen ? 'block' : 'none'};\n`;\n\nconst StartMenuItem = styled.div`\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 12px;\n  color: #000;\n  \n  &:hover {\n    background: #000080;\n    color: white;\n  }\n`;\n\nconst Clock = styled.div`\n  height: 28px;\n  min-width: 80px;\n  background: linear-gradient(to bottom, #e0e0e0 0%, #c0c0c0 100%);\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 11px;\n  color: #000;\n  font-weight: bold;\n  box-shadow: inset 1px 1px 0px rgba(255, 255, 255, 0.3);\n  margin-left: auto;\n`;\n\nconst BackgroundOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.2);\n  pointer-events: none;\n`;\n\nconst DesktopTitle = styled.div`\n  position: absolute;\n  top: 50px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 48px;\n  font-weight: bold;\n  color: white;\n  text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8);\n  z-index: 1;\n  pointer-events: none;\n`;\n\nconst Desktop: React.FC = () => {\n  const [isStartMenuOpen, setIsStartMenuOpen] = useState(false);\n  const [currentTime, setCurrentTime] = useState('');\n  const [desktopState, setDesktopState] = useState<DesktopState>({\n          icons: [\n        {\n          id: 'music',\n          name: 'music',\n          type: 'folder',\n          position: { x: 50, y: 150 },\n          icon: '/icons/music.png',\n          color: '#007AFF'\n        },\n        {\n          id: 'the-archive',\n          name: 'ishv4ra',\n          type: 'folder',\n          position: { x: 50, y: 280 },\n          icon: '/icons/ishv4ra.png',\n          color: '#8B4513'\n        },\n        {\n          id: 'sculpter',\n          name: 'playday cuts',\n          type: 'folder',\n          position: { x: 50, y: 410 },\n          icon: '/icons/playdaycuts.png',\n          color: '#FF6B6B'\n        }\n      ],\n    windows: [],\n    activeWindowId: null,\n    background: 'dog-pattern'\n  });\n\n  const handleIconMove = useCallback((iconId: string, x: number, y: number) => {\n    setDesktopState(prev => {\n      const iconIndex = prev.icons.findIndex(icon => icon.id === iconId);\n      if (iconIndex === -1) return prev;\n      \n      const newIcons = [...prev.icons];\n      newIcons[iconIndex] = {\n        ...newIcons[iconIndex],\n        position: { x, y }\n      };\n      \n      return {\n        ...prev,\n        icons: newIcons\n      };\n    });\n  }, []);\n\n  const handleOpenCollection = useCallback((collection: any) => {\n    const newWindow: WindowType = {\n      id: `collection-${collection.id}`,\n      title: `${collection.name} - Photos`,\n      type: 'folder',\n      position: { x: 150, y: 150 },\n      size: { width: 1000, height: 700 },\n      isMinimized: false,\n      isMaximized: false,\n      isOpen: true,\n      zIndex: Date.now(),\n      content: <CollectionViewer collection={collection} onOpenPhoto={(photo) => handleOpenPhoto(photo)} />\n    };\n    \n    setDesktopState(prev => ({\n      ...prev,\n      windows: [...prev.windows, newWindow],\n      activeWindowId: newWindow.id\n    }));\n  }, []);\n\n  const handleOpenPhoto = useCallback((photo: any) => {\n    const newWindow: WindowType = {\n      id: `photo-${photo.id}`,\n      title: `${photo.name} - Full View`,\n      type: 'app',\n      position: { x: 200, y: 200 },\n      size: { width: 900, height: 700 },\n      isMinimized: false,\n      isMaximized: false,\n      isOpen: true,\n      zIndex: Date.now(),\n      content: <FullImageViewer \n        photo={photo} \n        onClose={() => handleWindowClose(`photo-${photo.id}`)}\n        onNavigate={(direction) => handlePhotoNavigate(photo, direction)}\n      />\n    };\n    \n    setDesktopState(prev => ({\n      ...prev,\n      windows: [...prev.windows, newWindow],\n      activeWindowId: newWindow.id\n    }));\n  }, []);\n\n  const handlePhotoNavigate = useCallback((currentPhoto: any, direction: 'prev' | 'next') => {\n    // Find the next/previous photo in the same collection\n    const photos = photoData.filter(p => p.collection === currentPhoto.collection);\n    const currentIndex = photos.findIndex(p => p.id === currentPhoto.id);\n    let newIndex = direction === 'next' ? currentIndex + 1 : currentIndex - 1;\n    \n    // Wrap around\n    if (newIndex < 0) newIndex = photos.length - 1;\n    if (newIndex >= photos.length) newIndex = 0;\n    \n    const newPhoto = photos[newIndex];\n    \n    // Update the current photo window with the new photo\n    setDesktopState(prev => {\n      const newWindows = prev.windows.map(w => {\n        if (w.id === `photo-${currentPhoto.id}`) {\n          return {\n            ...w,\n            title: `${newPhoto.name} - Full View`,\n            content: <FullImageViewer \n              photo={newPhoto} \n              onClose={() => handleWindowClose(w.id)}\n              onNavigate={(dir) => handlePhotoNavigate(newPhoto, dir)}\n            />\n          };\n        }\n        return w;\n      });\n      \n      return {\n        ...prev,\n        windows: newWindows\n      };\n    });\n  }, []);\n\n  const handleIconClick = useCallback((icon: IconType) => {\n    // Check if app is already running\n    const existingWindow = desktopState.windows.find(window => \n      window.id.startsWith(`${icon.id}-`) || window.id === `window-${icon.id}`\n    );\n\n    if (existingWindow) {\n      // If app is already running, bring it to focus and unminimize if needed\n      if (existingWindow.isMinimized) {\n        setDesktopState(prev => ({\n          ...prev,\n          windows: prev.windows.map(w => \n            w.id === existingWindow.id ? { ...w, isMinimized: false } : w\n          ),\n          activeWindowId: existingWindow.id\n        }));\n      } else {\n        // Just bring to focus\n        setDesktopState(prev => ({\n          ...prev,\n          activeWindowId: existingWindow.id,\n          windows: prev.windows.map(w => ({\n            ...w,\n            zIndex: w.id === existingWindow.id ? Date.now() : w.zIndex\n          }))\n        }));\n      }\n      return;\n    }\n\n    if (icon.id === 'music') {\n      // Open music window\n      const newWindow: WindowType = {\n        id: `music-${Date.now()}`,\n        title: 'Music',\n        type: 'app',\n        position: { x: 150, y: 150 },\n        size: { width: 800, height: 600 },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: <SimpleGame />\n      };\n      \n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.id === 'the-archive') {\n      // Open photo gallery for the Archive icon\n      const newWindow: WindowType = {\n        id: `window-${icon.id}`,\n        title: 'Photo Gallery',\n        type: 'app',\n        position: { x: 100, y: 100 },\n        size: { width: 1000, height: 700 },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: <PhotoGallery onOpenCollection={handleOpenCollection} />\n      };\n      \n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.type === 'folder') {\n      // Open folder window with custom content\n      const newWindow: WindowType = {\n        id: `window-${icon.id}`,\n        title: icon.name,\n        type: 'folder',\n        position: { x: 100, y: 100 },\n        size: { width: 600, height: 400 },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: <FolderContent folderId={icon.id} folderName={icon.name} />\n      };\n      \n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.type === 'app') {\n      // Open app window\n      const newWindow: WindowType = {\n        id: `window-${icon.id}`,\n        title: icon.name,\n        type: 'app',\n        position: { x: 150, y: 150 },\n        size: { width: 800, height: 600 },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: <div>Welcome to {icon.name}!</div>\n      };\n      \n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    }\n  }, [desktopState.windows]);\n\n  const handleWindowClose = useCallback((windowId: string) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.filter(w => w.id !== windowId),\n      activeWindowId: prev.activeWindowId === windowId ? null : prev.activeWindowId\n    }));\n  }, []);\n\n  const handleWindowMinimize = useCallback((windowId: string) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => \n        w.id === windowId ? { ...w, isMinimized: !w.isMinimized } : w\n      )\n    }));\n  }, []);\n\n  const handleWindowMaximize = useCallback((windowId: string) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => \n        w.id === windowId ? { ...w, isMaximized: !w.isMaximized } : w\n      )\n    }));\n  }, []);\n\n  const handleWindowMove = useCallback((windowId: string, x: number, y: number) => {\n    // Use functional update to avoid stale state issues\n    setDesktopState(prev => {\n      const windowIndex = prev.windows.findIndex(w => w.id === windowId);\n      if (windowIndex === -1) return prev;\n      \n      const newWindows = [...prev.windows];\n      newWindows[windowIndex] = {\n        ...newWindows[windowIndex],\n        position: { x, y }\n      };\n      \n      return {\n        ...prev,\n        windows: newWindows\n      };\n    });\n  }, []);\n\n  const handleWindowResize = useCallback((windowId: string, width: number, height: number) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => \n        w.id === windowId ? { ...w, size: { width, height } } : w\n      )\n    }));\n  }, []);\n\n  const handleDesktopClick = useCallback(() => {\n    setIsStartMenuOpen(false);\n  }, []);\n\n  return (\n    <DesktopContainer onClick={handleDesktopClick}>\n      <BackgroundOverlay />\n      \n      {/* Desktop Icons */}\n      {desktopState.icons.map(icon => (\n        <Icon\n          key={icon.id}\n          icon={icon}\n          onClick={() => handleIconClick(icon)}\n          onMove={handleIconMove}\n          isSelected={false}\n        />\n      ))}\n      \n      {/* Windows */}\n      {desktopState.windows.map(window => (\n        <Window\n          key={window.id}\n          window={window}\n          onClose={handleWindowClose}\n          onMinimize={handleWindowMinimize}\n          onMaximize={handleWindowMaximize}\n          onMove={handleWindowMove}\n          onResize={handleWindowResize}\n          onFocus={(windowId) => {\n            setDesktopState(prev => ({\n              ...prev,\n              activeWindowId: windowId,\n              windows: prev.windows.map(w => ({\n                ...w,\n                zIndex: w.id === windowId ? Date.now() : w.zIndex\n              }))\n            }));\n          }}\n        >\n          {window.content}\n        </Window>\n      ))}\n\n      {/* Taskbar */}\n      <Taskbar>\n        <StartButton onClick={() => setIsStartMenuOpen(!isStartMenuOpen)}>\n          <img \n            src=\"/icons/startmenu.png\" \n            alt=\"Start\" \n            style={{ \n              width: '16px', \n              height: '16px',\n              imageRendering: 'pixelated'\n            }} \n          />\n          <span style={{ \n            color: 'white', \n            fontWeight: 'bold', \n            fontSize: '12px',\n            textShadow: '1px 1px 1px rgba(0, 0, 0, 0.5)'\n          }}>\n            Start\n          </span>\n        </StartButton>\n        \n        <TaskbarItems>\n          {desktopState.windows\n            .filter(window => !window.isMinimized)\n            .map(window => (\n              <TaskbarItem\n                key={window.id}\n                isActive={desktopState.activeWindowId === window.id}\n                onClick={() => {\n                  setDesktopState(prev => ({\n                    ...prev,\n                    activeWindowId: window.id,\n                    windows: prev.windows.map(w => ({\n                      ...w,\n                      zIndex: w.id === window.id ? Date.now() : w.zIndex\n                    }))\n                  }));\n                }}\n              >\n                {window.title}\n              </TaskbarItem>\n            ))}\n        </TaskbarItems>\n      </Taskbar>\n\n      {/* Start Menu */}\n      <StartMenu isOpen={isStartMenuOpen}>\n        <StartMenuItem onClick={() => setIsStartMenuOpen(false)}>\n          Shut Down\n        </StartMenuItem>\n        <StartMenuItem onClick={() => setIsStartMenuOpen(false)}>\n          Restart\n        </StartMenuItem>\n        <StartMenuItem onClick={() => setIsStartMenuOpen(false)}>\n          Log Off\n        </StartMenuItem>\n      </StartMenu>\n    </DesktopContainer>\n  );\n};\n\nexport default Desktop;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}