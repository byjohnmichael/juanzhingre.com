{"ast":null,"code":"var _jsxFileName = \"/home/johnmichael/Work/JuanZhingre/desktop-website/src/components/Window/DemosPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: white;\n  border: 2px solid black;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n`;\n_c = PlayerContainer;\nconst TableContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  border-bottom: 1px solid #ccc;\n`;\n_c2 = TableContainer;\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 12px;\n`;\n_c3 = Table;\nconst TableHeader = styled.thead`\n  background-color: #f0f0f0;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n`;\n_c4 = TableHeader;\nconst HeaderRow = styled.tr`\n  border-bottom: 1px solid #ccc;\n`;\n_c5 = HeaderRow;\nconst HeaderCell = styled.th`\n  padding: 8px 12px;\n  text-align: left;\n  font-weight: bold;\n  color: #333;\n  border-right: 1px solid #ccc;\n  cursor: ${props => props.sortable ? 'pointer' : 'default'};\n  user-select: none;\n  \n  &:hover {\n    background-color: ${props => props.sortable ? '#e0e0e0' : 'transparent'};\n  }\n  \n  &:last-child {\n    border-right: none;\n  }\n`;\n_c6 = HeaderCell;\nconst SortIcon = styled.span`\n  margin-left: 4px;\n  font-size: 10px;\n`;\n_c7 = SortIcon;\nconst TableBody = styled.tbody``;\n_c8 = TableBody;\nconst TableRow = styled.tr`\n  background-color: ${props => props.isPlaying ? '#e3f2fd' : 'white'};\n  border-bottom: 1px solid #eee;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: ${props => props.isPlaying ? '#e3f2fd' : '#f8f8f8'};\n  }\n`;\n_c9 = TableRow;\nconst TableCell = styled.td`\n  padding: 6px 12px;\n  border-right: 1px solid #eee;\n  vertical-align: middle;\n  \n  &:last-child {\n    border-right: none;\n  }\n`;\n_c0 = TableCell;\nconst Checkbox = styled.input`\n  margin: 0;\n  cursor: pointer;\n`;\n_c1 = Checkbox;\nconst PlayButton = styled.button`\n  background: #f0f0f0;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  cursor: pointer;\n  padding: 4px 8px;\n  font-size: 12px;\n  color: ${props => props.isPlaying ? '#1976d2' : '#666'};\n  margin-left: 8px;\n  box-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n  \n  &:hover {\n    background: #e0e0e0;\n    color: #1976d2;\n  }\n  \n  &:active {\n    box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1);\n  }\n`;\n_c10 = PlayButton;\nconst ControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px;\n  background-color: #f8f8f8;\n  border-top: 1px solid #ccc;\n  gap: 12px;\n`;\n_c11 = ControlsContainer;\nconst PlayPauseButton = styled.button`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  border: 1px solid #ccc;\n  background: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  \n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n_c12 = PlayPauseButton;\nconst ProgressBar = styled.div`\n  flex: 1;\n  height: 4px;\n  background-color: #ddd;\n  border-radius: 2px;\n  position: relative;\n  cursor: pointer;\n`;\n_c13 = ProgressBar;\nconst ProgressFill = styled.div`\n  height: 100%;\n  width: ${props => props.progress}%;\n  background-color: #1976d2;\n  border-radius: 2px;\n  transition: width 0.1s ease;\n`;\n_c14 = ProgressFill;\nconst TimeDisplay = styled.span`\n  font-size: 11px;\n  color: #666;\n  min-width: 60px;\n  text-align: center;\n`;\n_c15 = TimeDisplay;\nconst VolumeControl = styled.input`\n  width: 80px;\n`;\n_c16 = VolumeControl;\nconst DemosPlayer = () => {\n  _s();\n  const [selectedTracks, setSelectedTracks] = useState(new Set());\n  const [currentTrack, setCurrentTrack] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [sortBy, setSortBy] = useState('name');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const audioRef = useRef(null);\n  const demos = [{\n    name: \"You are driving me insane\",\n    filename: \"You are driving me insane.m4a\",\n    duration: \"3:45\",\n    size: \"1.8MB\"\n  }, {\n    name: \"Sunburnt shrederino\",\n    filename: \"Sunburnt shrederino.m4a\",\n    duration: \"2:30\",\n    size: \"1.2MB\"\n  }, {\n    name: \"Song idea\",\n    filename: \"Song idea.m4a\",\n    duration: \"2:15\",\n    size: \"1.2MB\"\n  }, {\n    name: \"Girl you lol fine bridge\",\n    filename: \"Girl you lol fine bridge_.m4a\",\n    duration: \"1:20\",\n    size: \"459KB\"\n  }, {\n    name: \"Hideaway updated demo\",\n    filename: \"Hideaway updated demo.m4a\",\n    duration: \"2:45\",\n    size: \"1.0MB\"\n  }, {\n    name: \"Hmmm (demo)\",\n    filename: \"Hmmm (demo).m4a\",\n    duration: \"1:50\",\n    size: \"636KB\"\n  }, {\n    name: \"Ya seeeeee (demo)\",\n    filename: \"Ya seeeeee (demo).m4a\",\n    duration: \"2:55\",\n    size: \"1.1MB\"\n  }];\n  const sortedDemos = [...demos].sort((a, b) => {\n    const aValue = sortBy === 'name' ? a.name.toLowerCase() : a.duration;\n    const bValue = sortBy === 'name' ? b.name.toLowerCase() : b.duration;\n    if (sortOrder === 'asc') {\n      return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n    } else {\n      return aValue > bValue ? -1 : aValue < bValue ? 1 : 0;\n    }\n  });\n  const handleSort = column => {\n    if (sortBy === column) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(column);\n      setSortOrder('asc');\n    }\n  };\n  const handleTrackSelect = filename => {\n    const newSelected = new Set(selectedTracks);\n    if (newSelected.has(filename)) {\n      newSelected.delete(filename);\n    } else {\n      newSelected.add(filename);\n    }\n    setSelectedTracks(newSelected);\n  };\n  const handlePlayTrack = filename => {\n    if (currentTrack === filename && isPlaying) {\n      var _audioRef$current;\n      // Pause current track\n      (_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.pause();\n      setIsPlaying(false);\n    } else {\n      // Play new track\n      setCurrentTrack(filename);\n      setIsPlaying(true);\n      if (audioRef.current) {\n        audioRef.current.src = `/demos/${filename}`;\n        audioRef.current.play();\n      }\n    }\n  };\n  const handlePlayPause = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const handleProgressClick = e => {\n    if (audioRef.current && duration > 0) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      const clickX = e.clientX - rect.left;\n      const newTime = clickX / rect.width * duration;\n      audioRef.current.currentTime = newTime;\n      setCurrentTime(newTime);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n          children: /*#__PURE__*/_jsxDEV(HeaderRow, {\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              style: {\n                width: '20px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n              style: {\n                width: '20px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n              sortable: true,\n              onClick: () => handleSort('name'),\n              style: {\n                width: '40%'\n              },\n              children: [\"Song Name\", sortBy === 'name' && /*#__PURE__*/_jsxDEV(SortIcon, {\n                children: sortOrder === 'asc' ? '▲' : '▼'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n              sortable: true,\n              onClick: () => handleSort('duration'),\n              style: {\n                width: '15%'\n              },\n              children: [\"Time\", sortBy === 'duration' && /*#__PURE__*/_jsxDEV(SortIcon, {\n                children: sortOrder === 'asc' ? '▲' : '▼'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n              style: {\n                width: '25%'\n              },\n              children: \"Artist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n              style: {\n                width: '20%'\n              },\n              children: \"Album\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: sortedDemos.map(demo => /*#__PURE__*/_jsxDEV(TableRow, {\n            isSelected: selectedTracks.has(demo.filename),\n            isPlaying: currentTrack === demo.filename,\n            onClick: () => handlePlayTrack(demo.filename),\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                type: \"checkbox\",\n                checked: selectedTracks.has(demo.filename),\n                onChange: e => {\n                  e.stopPropagation();\n                  handleTrackSelect(demo.filename);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(PlayButton, {\n                isPlaying: currentTrack === demo.filename && isPlaying,\n                onClick: e => {\n                  e.stopPropagation();\n                  handlePlayTrack(demo.filename);\n                },\n                children: currentTrack === demo.filename && isPlaying ? '⏸' : '▶'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: demo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: demo.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Juan Zhingre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"demos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this)]\n          }, demo.filename, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(PlayPauseButton, {\n        onClick: handlePlayPause,\n        children: isPlaying ? '⏸' : '▶'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        onClick: handleProgressClick,\n        children: /*#__PURE__*/_jsxDEV(ProgressFill, {\n          progress: duration > 0 ? currentTime / duration * 100 : 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimeDisplay, {\n        children: [formatTime(currentTime), \" / \", formatTime(duration)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VolumeControl, {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.1\",\n        defaultValue: \"0.7\",\n        onChange: e => {\n          if (audioRef.current) {\n            audioRef.current.volume = parseFloat(e.target.value);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onTimeUpdate: () => {\n        if (audioRef.current) {\n          setCurrentTime(audioRef.current.currentTime);\n        }\n      },\n      onLoadedMetadata: () => {\n        if (audioRef.current) {\n          setDuration(audioRef.current.duration);\n        }\n      },\n      onEnded: () => {\n        setIsPlaying(false);\n        setCurrentTime(0);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n_s(DemosPlayer, \"7xUBy7UClOjuOfIi+lU97w1IgKc=\");\n_c17 = DemosPlayer;\nexport default DemosPlayer;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n$RefreshReg$(_c, \"PlayerContainer\");\n$RefreshReg$(_c2, \"TableContainer\");\n$RefreshReg$(_c3, \"Table\");\n$RefreshReg$(_c4, \"TableHeader\");\n$RefreshReg$(_c5, \"HeaderRow\");\n$RefreshReg$(_c6, \"HeaderCell\");\n$RefreshReg$(_c7, \"SortIcon\");\n$RefreshReg$(_c8, \"TableBody\");\n$RefreshReg$(_c9, \"TableRow\");\n$RefreshReg$(_c0, \"TableCell\");\n$RefreshReg$(_c1, \"Checkbox\");\n$RefreshReg$(_c10, \"PlayButton\");\n$RefreshReg$(_c11, \"ControlsContainer\");\n$RefreshReg$(_c12, \"PlayPauseButton\");\n$RefreshReg$(_c13, \"ProgressBar\");\n$RefreshReg$(_c14, \"ProgressFill\");\n$RefreshReg$(_c15, \"TimeDisplay\");\n$RefreshReg$(_c16, \"VolumeControl\");\n$RefreshReg$(_c17, \"DemosPlayer\");","map":{"version":3,"names":["React","useState","useRef","styled","jsxDEV","_jsxDEV","PlayerContainer","div","_c","TableContainer","_c2","Table","table","_c3","TableHeader","thead","_c4","HeaderRow","tr","_c5","HeaderCell","th","props","sortable","_c6","SortIcon","span","_c7","TableBody","tbody","_c8","TableRow","isPlaying","_c9","TableCell","td","_c0","Checkbox","input","_c1","PlayButton","button","_c10","ControlsContainer","_c11","PlayPauseButton","_c12","ProgressBar","_c13","ProgressFill","progress","_c14","TimeDisplay","_c15","VolumeControl","_c16","DemosPlayer","_s","selectedTracks","setSelectedTracks","Set","currentTrack","setCurrentTrack","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","sortBy","setSortBy","sortOrder","setSortOrder","audioRef","demos","name","filename","size","sortedDemos","sort","a","b","aValue","toLowerCase","bValue","handleSort","column","handleTrackSelect","newSelected","has","delete","add","handlePlayTrack","_audioRef$current","current","pause","src","play","handlePlayPause","formatTime","seconds","mins","Math","floor","secs","toString","padStart","handleProgressClick","e","rect","currentTarget","getBoundingClientRect","clickX","clientX","left","newTime","width","children","style","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","demo","isSelected","type","checked","onChange","stopPropagation","min","max","step","defaultValue","volume","parseFloat","target","value","ref","onTimeUpdate","onLoadedMetadata","onEnded","_c17","$RefreshReg$"],"sources":["/home/johnmichael/Work/JuanZhingre/desktop-website/src/components/Window/DemosPlayer.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst PlayerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: white;\n  border: 2px solid black;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n`;\n\nconst TableContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  border-bottom: 1px solid #ccc;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 12px;\n`;\n\nconst TableHeader = styled.thead`\n  background-color: #f0f0f0;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n`;\n\nconst HeaderRow = styled.tr`\n  border-bottom: 1px solid #ccc;\n`;\n\nconst HeaderCell = styled.th<{ sortable?: boolean }>`\n  padding: 8px 12px;\n  text-align: left;\n  font-weight: bold;\n  color: #333;\n  border-right: 1px solid #ccc;\n  cursor: ${props => props.sortable ? 'pointer' : 'default'};\n  user-select: none;\n  \n  &:hover {\n    background-color: ${props => props.sortable ? '#e0e0e0' : 'transparent'};\n  }\n  \n  &:last-child {\n    border-right: none;\n  }\n`;\n\nconst SortIcon = styled.span`\n  margin-left: 4px;\n  font-size: 10px;\n`;\n\nconst TableBody = styled.tbody``;\n\nconst TableRow = styled.tr<{ isPlaying: boolean }>`\n  background-color: ${props => props.isPlaying ? '#e3f2fd' : 'white'};\n  border-bottom: 1px solid #eee;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: ${props => props.isPlaying ? '#e3f2fd' : '#f8f8f8'};\n  }\n`;\n\nconst TableCell = styled.td`\n  padding: 6px 12px;\n  border-right: 1px solid #eee;\n  vertical-align: middle;\n  \n  &:last-child {\n    border-right: none;\n  }\n`;\n\nconst Checkbox = styled.input`\n  margin: 0;\n  cursor: pointer;\n`;\n\nconst PlayButton = styled.button<{ isPlaying: boolean }>`\n  background: #f0f0f0;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  cursor: pointer;\n  padding: 4px 8px;\n  font-size: 12px;\n  color: ${props => props.isPlaying ? '#1976d2' : '#666'};\n  margin-left: 8px;\n  box-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n  \n  &:hover {\n    background: #e0e0e0;\n    color: #1976d2;\n  }\n  \n  &:active {\n    box-shadow: inset 1px 1px 2px rgba(0,0,0,0.1);\n  }\n`;\n\nconst ControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px;\n  background-color: #f8f8f8;\n  border-top: 1px solid #ccc;\n  gap: 12px;\n`;\n\nconst PlayPauseButton = styled.button`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  border: 1px solid #ccc;\n  background: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  \n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  flex: 1;\n  height: 4px;\n  background-color: #ddd;\n  border-radius: 2px;\n  position: relative;\n  cursor: pointer;\n`;\n\nconst ProgressFill = styled.div<{ progress: number }>`\n  height: 100%;\n  width: ${props => props.progress}%;\n  background-color: #1976d2;\n  border-radius: 2px;\n  transition: width 0.1s ease;\n`;\n\nconst TimeDisplay = styled.span`\n  font-size: 11px;\n  color: #666;\n  min-width: 60px;\n  text-align: center;\n`;\n\nconst VolumeControl = styled.input`\n  width: 80px;\n`;\n\ninterface DemoFile {\n  name: string;\n  filename: string;\n  duration: string;\n  size: string;\n}\n\nconst DemosPlayer: React.FC = () => {\n  const [selectedTracks, setSelectedTracks] = useState<Set<string>>(new Set());\n  const [currentTrack, setCurrentTrack] = useState<string | null>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [sortBy, setSortBy] = useState<'name' | 'duration'>('name');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\n  \n  const audioRef = useRef<HTMLAudioElement>(null);\n\n  const demos: DemoFile[] = [\n    { name: \"You are driving me insane\", filename: \"You are driving me insane.m4a\", duration: \"3:45\", size: \"1.8MB\" },\n    { name: \"Sunburnt shrederino\", filename: \"Sunburnt shrederino.m4a\", duration: \"2:30\", size: \"1.2MB\" },\n    { name: \"Song idea\", filename: \"Song idea.m4a\", duration: \"2:15\", size: \"1.2MB\" },\n    { name: \"Girl you lol fine bridge\", filename: \"Girl you lol fine bridge_.m4a\", duration: \"1:20\", size: \"459KB\" },\n    { name: \"Hideaway updated demo\", filename: \"Hideaway updated demo.m4a\", duration: \"2:45\", size: \"1.0MB\" },\n    { name: \"Hmmm (demo)\", filename: \"Hmmm (demo).m4a\", duration: \"1:50\", size: \"636KB\" },\n    { name: \"Ya seeeeee (demo)\", filename: \"Ya seeeeee (demo).m4a\", duration: \"2:55\", size: \"1.1MB\" }\n  ];\n\n  const sortedDemos = [...demos].sort((a, b) => {\n    const aValue = sortBy === 'name' ? a.name.toLowerCase() : a.duration;\n    const bValue = sortBy === 'name' ? b.name.toLowerCase() : b.duration;\n    \n    if (sortOrder === 'asc') {\n      return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n    } else {\n      return aValue > bValue ? -1 : aValue < bValue ? 1 : 0;\n    }\n  });\n\n  const handleSort = (column: 'name' | 'duration') => {\n    if (sortBy === column) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(column);\n      setSortOrder('asc');\n    }\n  };\n\n  const handleTrackSelect = (filename: string) => {\n    const newSelected = new Set(selectedTracks);\n    if (newSelected.has(filename)) {\n      newSelected.delete(filename);\n    } else {\n      newSelected.add(filename);\n    }\n    setSelectedTracks(newSelected);\n  };\n\n  const handlePlayTrack = (filename: string) => {\n    if (currentTrack === filename && isPlaying) {\n      // Pause current track\n      audioRef.current?.pause();\n      setIsPlaying(false);\n    } else {\n      // Play new track\n      setCurrentTrack(filename);\n      setIsPlaying(true);\n      if (audioRef.current) {\n        audioRef.current.src = `/demos/${filename}`;\n        audioRef.current.play();\n      }\n    }\n  };\n\n  const handlePlayPause = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const handleProgressClick = (e: React.MouseEvent) => {\n    if (audioRef.current && duration > 0) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      const clickX = e.clientX - rect.left;\n      const newTime = (clickX / rect.width) * duration;\n      audioRef.current.currentTime = newTime;\n      setCurrentTime(newTime);\n    }\n  };\n\n  return (\n    <PlayerContainer>\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <HeaderRow>\n              <HeaderCell style={{ width: '20px' }}></HeaderCell>\n              <HeaderCell style={{ width: '20px' }}></HeaderCell>\n              <HeaderCell \n                sortable \n                onClick={() => handleSort('name')}\n                style={{ width: '40%' }}\n              >\n                Song Name\n                {sortBy === 'name' && (\n                  <SortIcon>{sortOrder === 'asc' ? '▲' : '▼'}</SortIcon>\n                )}\n              </HeaderCell>\n              <HeaderCell \n                sortable \n                onClick={() => handleSort('duration')}\n                style={{ width: '15%' }}\n              >\n                Time\n                {sortBy === 'duration' && (\n                  <SortIcon>{sortOrder === 'asc' ? '▲' : '▼'}</SortIcon>\n                )}\n              </HeaderCell>\n              <HeaderCell style={{ width: '25%' }}>Artist</HeaderCell>\n              <HeaderCell style={{ width: '20%' }}>Album</HeaderCell>\n            </HeaderRow>\n          </TableHeader>\n          <TableBody>\n            {sortedDemos.map((demo) => (\n              <TableRow \n                key={demo.filename}\n                isSelected={selectedTracks.has(demo.filename)}\n                isPlaying={currentTrack === demo.filename}\n                onClick={() => handlePlayTrack(demo.filename)}\n              >\n                <TableCell>\n                  <Checkbox \n                    type=\"checkbox\"\n                    checked={selectedTracks.has(demo.filename)}\n                    onChange={(e) => {\n                      e.stopPropagation();\n                      handleTrackSelect(demo.filename);\n                    }}\n                  />\n                </TableCell>\n                <TableCell>\n                  <PlayButton \n                    isPlaying={currentTrack === demo.filename && isPlaying}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handlePlayTrack(demo.filename);\n                    }}\n                  >\n                    {currentTrack === demo.filename && isPlaying ? '⏸' : '▶'}\n                  </PlayButton>\n                </TableCell>\n                <TableCell>{demo.name}</TableCell>\n                <TableCell>{demo.duration}</TableCell>\n                <TableCell>Juan Zhingre</TableCell>\n                <TableCell>demos</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      \n      <ControlsContainer>\n        <PlayPauseButton onClick={handlePlayPause}>\n          {isPlaying ? '⏸' : '▶'}\n        </PlayPauseButton>\n        <ProgressBar onClick={handleProgressClick}>\n          <ProgressFill progress={duration > 0 ? (currentTime / duration) * 100 : 0} />\n        </ProgressBar>\n        <TimeDisplay>\n          {formatTime(currentTime)} / {formatTime(duration)}\n        </TimeDisplay>\n        <VolumeControl \n          type=\"range\" \n          min=\"0\" \n          max=\"1\" \n          step=\"0.1\" \n          defaultValue=\"0.7\"\n          onChange={(e) => {\n            if (audioRef.current) {\n              audioRef.current.volume = parseFloat(e.target.value);\n            }\n          }}\n        />\n      </ControlsContainer>\n      \n      <audio\n        ref={audioRef}\n        onTimeUpdate={() => {\n          if (audioRef.current) {\n            setCurrentTime(audioRef.current.currentTime);\n          }\n        }}\n        onLoadedMetadata={() => {\n          if (audioRef.current) {\n            setDuration(audioRef.current.duration);\n          }\n        }}\n        onEnded={() => {\n          setIsPlaying(false);\n          setCurrentTime(0);\n        }}\n      />\n    </PlayerContainer>\n  );\n};\n\nexport default DemosPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}