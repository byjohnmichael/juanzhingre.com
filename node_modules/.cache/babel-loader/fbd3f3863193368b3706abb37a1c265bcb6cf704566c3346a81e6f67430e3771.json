{"ast":null,"code":"var _jsxFileName = \"/home/johnmichael/Work/JuanZhingre/desktop-website/src/components/Icon/Icon.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IconContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: ${props => props.isDragging ? 'grabbing' : 'grab'};\n  user-select: none;\n  padding: 8px;\n  border-radius: 8px;\n  transition: ${props => props.isDragging ? 'none' : 'all 0.2s ease'};\n  position: absolute;\n  left: ${props => props.x}px;\n  top: ${props => props.y}px;\n  \n  /* Performance optimizations for smooth dragging */\n  will-change: ${props => props.isDragging ? 'left, top' : 'transform'};\n  transform: ${props => props.isDragging ? 'translateZ(0)' : 'scale(1)'};\n  backface-visibility: hidden;\n  \n  &:hover {\n    background-color: rgba(255, 255, 255, 0.1);\n    transform: ${props => props.isDragging ? 'translateZ(0)' : 'scale(1.05)'};\n  }\n  \n  ${props => props.isSelected && !props.isDragging && `\n    background-color: rgba(255, 255, 255, 0.2);\n    transform: scale(1.1);\n  `}\n  \n  ${props => props.isDragging && `\n    background-color: rgba(255, 255, 255, 0.15);\n    transform: scale(1.1) translateZ(0);\n    z-index: 9999;\n  `}\n`;\n_c = IconContainer;\nconst IconCircle = styled.div`\n  width: 64px;\n  height: 64px;\n  border-radius: ${props => props.isImage ? '12px' : '50%'};\n  background-color: ${props => props.isImage ? 'transparent' : props.color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  font-size: ${props => props.isImage ? '0' : '32px'};\n  color: white;\n  font-weight: bold;\n  overflow: hidden;\n`;\n_c2 = IconCircle;\nconst IconLabel = styled.div`\n  color: white;\n  text-align: center;\n  font-size: 12px;\n  font-weight: 500;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);\n  max-width: 80px;\n  word-wrap: break-word;\n`;\n_c3 = IconLabel;\nconst Icon = ({\n  icon,\n  onClick,\n  onMove,\n  isSelected = false\n}) => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const iconRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  const dragOffsetRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const isImageIcon = icon.icon.includes('.png') || icon.icon.includes('.jpg') || icon.icon.includes('.jpeg') || icon.icon.includes('.gif');\n\n  // Optimized mouse move handler using refs\n  const handleMouseMove = useCallback(e => {\n    if (isDraggingRef.current) {\n      const newX = e.clientX - dragOffsetRef.current.x;\n      const newY = e.clientY - dragOffsetRef.current.y;\n\n      // Use requestAnimationFrame for smooth updates\n      requestAnimationFrame(() => {\n        onMove(icon.id, newX, newY);\n      });\n    }\n  }, [icon.id, onMove]);\n\n  // Optimized mouse up handler\n  const handleMouseUp = useCallback(() => {\n    isDraggingRef.current = false;\n    setIsDragging(false);\n  }, []);\n\n  // Set up event listeners only when dragging\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove, {\n        passive: true\n      });\n      document.addEventListener('mouseup', handleMouseUp, {\n        passive: true\n      });\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDragging, handleMouseMove, handleMouseUp]);\n  const handleMouseDown = useCallback(e => {\n    var _iconRef$current;\n    // Only start dragging on left mouse button\n    if (e.button !== 0) return;\n    const rect = (_iconRef$current = iconRef.current) === null || _iconRef$current === void 0 ? void 0 : _iconRef$current.getBoundingClientRect();\n    if (!rect) return;\n    const offsetX = e.clientX - rect.left;\n    const offsetY = e.clientY - rect.top;\n    dragOffsetRef.current = {\n      x: offsetX,\n      y: offsetY\n    };\n    setDragOffset({\n      x: offsetX,\n      y: offsetY\n    });\n    isDraggingRef.current = true;\n    setIsDragging(true);\n\n    // Prevent text selection during drag\n    e.preventDefault();\n  }, []);\n  const handleClick = useCallback(e => {\n    // Only trigger click if we didn't drag\n    if (!isDraggingRef.current) {\n      onClick();\n    }\n  }, [onClick]);\n  return /*#__PURE__*/_jsxDEV(IconContainer, {\n    ref: iconRef,\n    x: icon.position.x,\n    y: icon.position.y,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    isSelected: isSelected,\n    isDragging: isDragging,\n    children: [/*#__PURE__*/_jsxDEV(IconCircle, {\n      color: icon.color,\n      isImage: isImageIcon,\n      children: isImageIcon ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon.icon,\n        alt: icon.name,\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain'\n        },\n        draggable: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this) : icon.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconLabel, {\n      children: icon.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(Icon, \"EXW1ho6co6A1iKwGlAApYne1PmI=\");\n_c4 = Icon;\nexport default Icon;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"IconContainer\");\n$RefreshReg$(_c2, \"IconCircle\");\n$RefreshReg$(_c3, \"IconLabel\");\n$RefreshReg$(_c4, \"Icon\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","styled","jsxDEV","_jsxDEV","IconContainer","div","props","isDragging","x","y","isSelected","_c","IconCircle","isImage","color","_c2","IconLabel","_c3","Icon","icon","onClick","onMove","_s","setIsDragging","dragOffset","setDragOffset","iconRef","isDraggingRef","dragOffsetRef","isImageIcon","includes","handleMouseMove","e","current","newX","clientX","newY","clientY","requestAnimationFrame","id","handleMouseUp","document","addEventListener","passive","removeEventListener","handleMouseDown","_iconRef$current","button","rect","getBoundingClientRect","offsetX","left","offsetY","top","preventDefault","handleClick","ref","position","onMouseDown","children","src","alt","name","style","width","height","objectFit","draggable","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["/home/johnmichael/Work/JuanZhingre/desktop-website/src/components/Icon/Icon.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Icon as IconType } from '../../types/desktop';\n\ninterface IconProps {\n  icon: IconType;\n  onClick: () => void;\n  onMove: (id: string, x: number, y: number) => void;\n  isSelected?: boolean;\n}\n\nconst IconContainer = styled.div<{ isSelected: boolean; x: number; y: number; isDragging: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: ${props => props.isDragging ? 'grabbing' : 'grab'};\n  user-select: none;\n  padding: 8px;\n  border-radius: 8px;\n  transition: ${props => props.isDragging ? 'none' : 'all 0.2s ease'};\n  position: absolute;\n  left: ${props => props.x}px;\n  top: ${props => props.y}px;\n  \n  /* Performance optimizations for smooth dragging */\n  will-change: ${props => props.isDragging ? 'left, top' : 'transform'};\n  transform: ${props => props.isDragging ? 'translateZ(0)' : 'scale(1)'};\n  backface-visibility: hidden;\n  \n  &:hover {\n    background-color: rgba(255, 255, 255, 0.1);\n    transform: ${props => props.isDragging ? 'translateZ(0)' : 'scale(1.05)'};\n  }\n  \n  ${props => props.isSelected && !props.isDragging && `\n    background-color: rgba(255, 255, 255, 0.2);\n    transform: scale(1.1);\n  `}\n  \n  ${props => props.isDragging && `\n    background-color: rgba(255, 255, 255, 0.15);\n    transform: scale(1.1) translateZ(0);\n    z-index: 9999;\n  `}\n`;\n\nconst IconCircle = styled.div<{ color: string; isImage: boolean }>`\n  width: 64px;\n  height: 64px;\n  border-radius: ${props => props.isImage ? '12px' : '50%'};\n  background-color: ${props => props.isImage ? 'transparent' : props.color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  font-size: ${props => props.isImage ? '0' : '32px'};\n  color: white;\n  font-weight: bold;\n  overflow: hidden;\n`;\n\nconst IconLabel = styled.div`\n  color: white;\n  text-align: center;\n  font-size: 12px;\n  font-weight: 500;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);\n  max-width: 80px;\n  word-wrap: break-word;\n`;\n\nconst Icon: React.FC<IconProps> = ({ icon, onClick, onMove, isSelected = false }) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  \n  const iconRef = useRef<HTMLDivElement>(null);\n  const isDraggingRef = useRef(false);\n  const dragOffsetRef = useRef({ x: 0, y: 0 });\n\n  const isImageIcon = icon.icon.includes('.png') || icon.icon.includes('.jpg') || icon.icon.includes('.jpeg') || icon.icon.includes('.gif');\n\n  // Optimized mouse move handler using refs\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDraggingRef.current) {\n      const newX = e.clientX - dragOffsetRef.current.x;\n      const newY = e.clientY - dragOffsetRef.current.y;\n      \n      // Use requestAnimationFrame for smooth updates\n      requestAnimationFrame(() => {\n        onMove(icon.id, newX, newY);\n      });\n    }\n  }, [icon.id, onMove]);\n\n  // Optimized mouse up handler\n  const handleMouseUp = useCallback(() => {\n    isDraggingRef.current = false;\n    setIsDragging(false);\n  }, []);\n\n  // Set up event listeners only when dragging\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove, { passive: true });\n      document.addEventListener('mouseup', handleMouseUp, { passive: true });\n      \n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDragging, handleMouseMove, handleMouseUp]);\n\n  const handleMouseDown = useCallback((e: React.MouseEvent) => {\n    // Only start dragging on left mouse button\n    if (e.button !== 0) return;\n    \n    const rect = iconRef.current?.getBoundingClientRect();\n    if (!rect) return;\n    \n    const offsetX = e.clientX - rect.left;\n    const offsetY = e.clientY - rect.top;\n    \n    dragOffsetRef.current = { x: offsetX, y: offsetY };\n    setDragOffset({ x: offsetX, y: offsetY });\n    isDraggingRef.current = true;\n    setIsDragging(true);\n    \n    // Prevent text selection during drag\n    e.preventDefault();\n  }, []);\n\n  const handleClick = useCallback((e: React.MouseEvent) => {\n    // Only trigger click if we didn't drag\n    if (!isDraggingRef.current) {\n      onClick();\n    }\n  }, [onClick]);\n\n  return (\n    <IconContainer \n      ref={iconRef}\n      x={icon.position.x}\n      y={icon.position.y}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      isSelected={isSelected}\n      isDragging={isDragging}\n    >\n      <IconCircle color={icon.color} isImage={isImageIcon}>\n        {isImageIcon ? (\n          <img \n            src={icon.icon} \n            alt={icon.name}\n            style={{ width: '100%', height: '100%', objectFit: 'contain' }}\n            draggable={false}\n          />\n        ) : (\n          icon.icon\n        )}\n      </IconCircle>\n      <IconLabel>{icon.name}</IconLabel>\n    </IconContainer>\n  );\n};\n\nexport default Icon;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}