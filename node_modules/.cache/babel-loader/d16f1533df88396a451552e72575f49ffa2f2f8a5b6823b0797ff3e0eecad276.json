{"ast":null,"code":"var _jsxFileName = \"/home/johnmichael/Work/JuanZhingre/desktop-website/src/components/Desktop/Desktop.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Icon from '../Icon/Icon';\nimport Window from '../Window/Window';\nimport SimpleGame from '../Window/SimpleGame';\nimport PhotoGallery from '../Window/PhotoGallery';\nimport FullImageViewer from '../Window/FullImageViewer';\nimport FolderContent from '../Window/FolderContent';\nimport { photoData } from '../../data/photos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DesktopContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url('/background.png');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  overflow: hidden;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n`;\n_c = DesktopContainer;\nconst Taskbar = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 40px;\n  background: linear-gradient(to bottom, #c0c0c0 0%, #a0a0a0 100%);\n  border-top: 2px solid #ffffff;\n  border-left: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  display: flex;\n  align-items: center;\n  padding: 0 4px;\n  z-index: 1000;\n  box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.2);\n`;\n_c2 = Taskbar;\nconst StartButton = styled.button`\n  width: 80px;\n  height: 32px;\n  background: linear-gradient(to bottom, #c0c0c0 0%, #a0a0a0 100%);\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 8px;\n  margin-right: 8px;\n  box-shadow: inset 1px 1px 0px rgba(255, 255, 255, 0.3);\n  \n  &:active {\n    background: linear-gradient(to bottom, #a0a0a0 0%, #c0c0c0 100%);\n    border: 2px solid #808080;\n    border-right: 2px solid #ffffff;\n    border-bottom: 2px solid #ffffff;\n    border-left: 2px solid #808080;\n    box-shadow: inset 1px 1px 0px rgba(0, 0, 0, 0.3);\n  }\n`;\n_c3 = StartButton;\nconst TaskbarItems = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  flex: 1;\n`;\n_c4 = TaskbarItems;\nconst TaskbarItem = styled.div`\n  height: 28px;\n  min-width: 140px;\n  background: ${props => props.isActive ? 'linear-gradient(to bottom, #ffffff 0%, #e0e0e0 100%)' : 'linear-gradient(to bottom, #e0e0e0 0%, #c0c0c0 100%)'};\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n  cursor: pointer;\n  font-size: 11px;\n  color: #000;\n  box-shadow: ${props => props.isActive ? 'inset 1px 1px 0px rgba(0, 0, 0, 0.1)' : 'inset 1px 1px 0px rgba(255, 255, 255, 0.3)'};\n  \n  &:hover {\n    background: linear-gradient(to bottom, #f0f0f0 0%, #d0d0d0 100%);\n  }\n`;\n_c5 = TaskbarItem;\nconst TaskbarIcon = styled.img`\n  width: 16px;\n  height: 16px;\n  margin-right: 6px;\n  image-rendering: pixelated;\n`;\n_c6 = TaskbarIcon;\nconst StartMenu = styled.div`\n  position: fixed;\n  bottom: 40px;\n  left: 4px;\n  width: 200px;\n  background: #c0c0c0;\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.3);\n  z-index: 1001;\n  display: ${props => props.isOpen ? 'block' : 'none'};\n`;\n_c7 = StartMenu;\nconst StartMenuItem = styled.div`\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 12px;\n  color: #000;\n  \n  &:hover {\n    background: #000080;\n    color: white;\n  }\n`;\n_c8 = StartMenuItem;\nconst Clock = styled.div`\n  height: 28px;\n  min-width: 80px;\n  background: linear-gradient(to bottom, #e0e0e0 0%, #c0c0c0 100%);\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 11px;\n  color: #000;\n  font-weight: bold;\n  box-shadow: inset 1px 1px 0px rgba(255, 255, 255, 0.3);\n  margin-left: auto;\n`;\n_c9 = Clock;\nconst BackgroundOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.2);\n  pointer-events: none;\n`;\n_c0 = BackgroundOverlay;\nconst DesktopTitle = styled.div`\n  position: absolute;\n  top: 50px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 48px;\n  font-weight: bold;\n  color: white;\n  text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8);\n  z-index: 1;\n  pointer-events: none;\n`;\nconst Desktop = () => {\n  _s();\n  const [isStartMenuOpen, setIsStartMenuOpen] = useState(false);\n  const [currentTime, setCurrentTime] = useState('');\n  const [desktopState, setDesktopState] = useState({\n    icons: [{\n      id: 'music',\n      name: 'music',\n      type: 'folder',\n      position: {\n        x: 50,\n        y: 150\n      },\n      icon: '/icons/music.png',\n      color: '#007AFF'\n    }, {\n      id: 'the-archive',\n      name: 'ishv4ra',\n      type: 'folder',\n      position: {\n        x: 50,\n        y: 280\n      },\n      icon: '/icons/ishv4ra.png',\n      color: '#8B4513'\n    }, {\n      id: 'sculpter',\n      name: 'playday cuts',\n      type: 'folder',\n      position: {\n        x: 50,\n        y: 410\n      },\n      icon: '/icons/playdaycuts.png',\n      color: '#FF6B6B'\n    }],\n    windows: [],\n    activeWindowId: null,\n    background: 'dog-pattern'\n  });\n  const handleIconMove = useCallback((iconId, x, y) => {\n    setDesktopState(prev => {\n      const iconIndex = prev.icons.findIndex(icon => icon.id === iconId);\n      if (iconIndex === -1) return prev;\n      const newIcons = [...prev.icons];\n      newIcons[iconIndex] = {\n        ...newIcons[iconIndex],\n        position: {\n          x,\n          y\n        }\n      };\n      return {\n        ...prev,\n        icons: newIcons\n      };\n    });\n  }, []);\n  const handleOpenCollection = useCallback(collection => {\n    // Find the first photo in the collection\n    const firstPhoto = photoData.find(photo => photo.collection === collection.id);\n    if (firstPhoto) {\n      const newWindow = {\n        id: `collection-${collection.id}`,\n        title: `${firstPhoto.name} - Full View`,\n        type: 'app',\n        position: {\n          x: 200,\n          y: 200\n        },\n        size: {\n          width: 900,\n          height: 700\n        },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: /*#__PURE__*/_jsxDEV(FullImageViewer, {\n          photo: firstPhoto,\n          onClose: () => handleWindowClose(`collection-${collection.id}`),\n          onNavigate: direction => handlePhotoNavigate(firstPhoto, direction)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 18\n        }, this)\n      };\n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    }\n  }, []);\n  const handleOpenPhoto = useCallback(photo => {\n    const newWindow = {\n      id: `photo-${photo.id}`,\n      title: `${photo.name} - Full View`,\n      type: 'app',\n      position: {\n        x: 200,\n        y: 200\n      },\n      size: {\n        width: 900,\n        height: 700\n      },\n      isMinimized: false,\n      isMaximized: false,\n      isOpen: true,\n      zIndex: Date.now(),\n      content: /*#__PURE__*/_jsxDEV(FullImageViewer, {\n        photo: photo,\n        onClose: () => handleWindowClose(`photo-${photo.id}`),\n        onNavigate: direction => handlePhotoNavigate(photo, direction)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 16\n      }, this)\n    };\n    setDesktopState(prev => ({\n      ...prev,\n      windows: [...prev.windows, newWindow],\n      activeWindowId: newWindow.id\n    }));\n  }, []);\n  const handlePhotoNavigate = useCallback((currentPhoto, direction) => {\n    // Find the next/previous photo in the same collection\n    const photos = photoData.filter(p => p.collection === currentPhoto.collection);\n    const currentIndex = photos.findIndex(p => p.id === currentPhoto.id);\n    let newIndex = direction === 'next' ? currentIndex + 1 : currentIndex - 1;\n\n    // Wrap around\n    if (newIndex < 0) newIndex = photos.length - 1;\n    if (newIndex >= photos.length) newIndex = 0;\n    const newPhoto = photos[newIndex];\n\n    // Find the photo viewer window by looking for the active window\n    setDesktopState(prev => {\n      const newWindows = prev.windows.map(w => {\n        // Check if this is the active window and it's a photo viewer\n        if (w.id === prev.activeWindowId && w.title.includes('Full View')) {\n          return {\n            ...w,\n            title: `${newPhoto.name} - Full View`,\n            content: /*#__PURE__*/_jsxDEV(FullImageViewer, {\n              photo: newPhoto,\n              onClose: () => handleWindowClose(w.id),\n              onNavigate: dir => handlePhotoNavigate(newPhoto, dir)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 22\n            }, this)\n          };\n        }\n        return w;\n      });\n      return {\n        ...prev,\n        windows: newWindows\n      };\n    });\n  }, []);\n  const handleIconClick = useCallback(icon => {\n    // Check if app is already running\n    const existingWindow = desktopState.windows.find(window => window.id.startsWith(`${icon.id}-`) || window.id === `window-${icon.id}`);\n    if (existingWindow) {\n      // If app is already running, bring it to focus and unminimize if needed\n      if (existingWindow.isMinimized) {\n        setDesktopState(prev => ({\n          ...prev,\n          windows: prev.windows.map(w => w.id === existingWindow.id ? {\n            ...w,\n            isMinimized: false\n          } : w),\n          activeWindowId: existingWindow.id\n        }));\n      } else {\n        // Just bring to focus\n        setDesktopState(prev => ({\n          ...prev,\n          activeWindowId: existingWindow.id,\n          windows: prev.windows.map(w => ({\n            ...w,\n            zIndex: w.id === existingWindow.id ? Date.now() : w.zIndex\n          }))\n        }));\n      }\n      return;\n    }\n    if (icon.id === 'music') {\n      // Open music window\n      const newWindow = {\n        id: `music-${Date.now()}`,\n        title: 'Music',\n        type: 'app',\n        position: {\n          x: 150,\n          y: 150\n        },\n        size: {\n          width: 800,\n          height: 600\n        },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: /*#__PURE__*/_jsxDEV(SimpleGame, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 18\n        }, this)\n      };\n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.id === 'the-archive') {\n      // Open photo gallery for the Archive icon\n      const newWindow = {\n        id: `window-${icon.id}`,\n        title: 'Photo Gallery',\n        type: 'app',\n        position: {\n          x: 100,\n          y: 100\n        },\n        size: {\n          width: 1000,\n          height: 700\n        },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: /*#__PURE__*/_jsxDEV(PhotoGallery, {\n          onOpenCollection: handleOpenCollection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 18\n        }, this)\n      };\n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.type === 'folder') {\n      // Open folder window with custom content\n      const newWindow = {\n        id: `window-${icon.id}`,\n        title: icon.name,\n        type: 'folder',\n        position: {\n          x: 100,\n          y: 100\n        },\n        size: {\n          width: 600,\n          height: 400\n        },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: /*#__PURE__*/_jsxDEV(FolderContent, {\n          folderId: icon.id,\n          folderName: icon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 18\n        }, this)\n      };\n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.type === 'app') {\n      // Open app window\n      const newWindow = {\n        id: `window-${icon.id}`,\n        title: icon.name,\n        type: 'app',\n        position: {\n          x: 150,\n          y: 150\n        },\n        size: {\n          width: 800,\n          height: 600\n        },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Welcome to \", icon.name, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 18\n        }, this)\n      };\n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    }\n  }, [desktopState.windows]);\n  const handleWindowClose = useCallback(windowId => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.filter(w => w.id !== windowId),\n      activeWindowId: prev.activeWindowId === windowId ? null : prev.activeWindowId\n    }));\n  }, []);\n  const handleWindowMinimize = useCallback(windowId => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => w.id === windowId ? {\n        ...w,\n        isMinimized: !w.isMinimized\n      } : w)\n    }));\n  }, []);\n  const handleWindowMaximize = useCallback(windowId => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => w.id === windowId ? {\n        ...w,\n        isMaximized: !w.isMaximized\n      } : w)\n    }));\n  }, []);\n  const handleWindowMove = useCallback((windowId, x, y) => {\n    // Use functional update to avoid stale state issues\n    setDesktopState(prev => {\n      const windowIndex = prev.windows.findIndex(w => w.id === windowId);\n      if (windowIndex === -1) return prev;\n      const newWindows = [...prev.windows];\n      newWindows[windowIndex] = {\n        ...newWindows[windowIndex],\n        position: {\n          x,\n          y\n        }\n      };\n      return {\n        ...prev,\n        windows: newWindows\n      };\n    });\n  }, []);\n  const handleWindowResize = useCallback((windowId, width, height) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => w.id === windowId ? {\n        ...w,\n        size: {\n          width,\n          height\n        }\n      } : w)\n    }));\n  }, []);\n  const handleDesktopClick = useCallback(() => {\n    setIsStartMenuOpen(false);\n  }, []);\n\n  // Update time every second\n  useEffect(() => {\n    const updateTime = () => {\n      const now = new Date();\n      const formatter = new Intl.DateTimeFormat('en-US', {\n        timeZone: 'America/Denver',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      });\n      const mountainTime = formatter.format(now);\n      setCurrentTime(`${mountainTime} MST`);\n    };\n    updateTime(); // Update immediately\n    const interval = setInterval(updateTime, 1000); // Update every second\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DesktopContainer, {\n    onClick: handleDesktopClick,\n    children: [/*#__PURE__*/_jsxDEV(BackgroundOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }, this), desktopState.icons.map(icon => /*#__PURE__*/_jsxDEV(Icon, {\n      icon: icon,\n      onClick: () => handleIconClick(icon),\n      onMove: handleIconMove,\n      isSelected: false\n    }, icon.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 9\n    }, this)), desktopState.windows.map(window => /*#__PURE__*/_jsxDEV(Window, {\n      window: window,\n      onClose: handleWindowClose,\n      onMinimize: handleWindowMinimize,\n      onMaximize: handleWindowMaximize,\n      onMove: handleWindowMove,\n      onResize: handleWindowResize,\n      onFocus: windowId => {\n        setDesktopState(prev => ({\n          ...prev,\n          activeWindowId: windowId,\n          windows: prev.windows.map(w => ({\n            ...w,\n            zIndex: w.id === windowId ? Date.now() : w.zIndex\n          }))\n        }));\n      },\n      children: window.content\n    }, window.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Taskbar, {\n      children: [/*#__PURE__*/_jsxDEV(StartButton, {\n        onClick: () => setIsStartMenuOpen(!isStartMenuOpen),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/icons/startmenu.png\",\n          alt: \"Start\",\n          style: {\n            width: '16px',\n            height: '16px',\n            imageRendering: 'pixelated'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'white',\n            fontWeight: 'bold',\n            fontSize: '12px',\n            textShadow: '1px 1px 1px rgba(0, 0, 0, 0.5)'\n          },\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskbarItems, {\n        children: desktopState.windows.filter(window => !window.isMinimized).map(window => {\n          // Get the icon for this window type\n          let iconSrc = '';\n          if (window.id.startsWith('music-')) {\n            iconSrc = '/icons/music.png';\n          } else if (window.id === 'window-the-archive') {\n            iconSrc = '/icons/ishv4ra.png';\n          } else if (window.id === 'window-sculpter') {\n            iconSrc = '/icons/playdaycuts.png';\n          }\n          return /*#__PURE__*/_jsxDEV(TaskbarItem, {\n            isActive: desktopState.activeWindowId === window.id,\n            onClick: () => {\n              setDesktopState(prev => ({\n                ...prev,\n                activeWindowId: window.id,\n                windows: prev.windows.map(w => {\n                  if (w.id === window.id) {\n                    return {\n                      ...w,\n                      zIndex: Date.now(),\n                      isMinimized: false // Ensure window is not minimized\n                    };\n                  }\n                  return w;\n                })\n              }));\n            },\n            children: [iconSrc && /*#__PURE__*/_jsxDEV(TaskbarIcon, {\n              src: iconSrc,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 31\n            }, this), window.title]\n          }, window.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Clock, {\n        children: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StartMenu, {\n      isOpen: isStartMenuOpen,\n      children: [/*#__PURE__*/_jsxDEV(StartMenuItem, {\n        onClick: () => setIsStartMenuOpen(false),\n        children: \"Shut Down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StartMenuItem, {\n        onClick: () => setIsStartMenuOpen(false),\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StartMenuItem, {\n        onClick: () => setIsStartMenuOpen(false),\n        children: \"Log Off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 516,\n    columnNumber: 5\n  }, this);\n};\n_s(Desktop, \"4+rTt5MQF7OqNUuKuzygWDqJf3g=\");\n_c1 = Desktop;\nexport default Desktop;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1;\n$RefreshReg$(_c, \"DesktopContainer\");\n$RefreshReg$(_c2, \"Taskbar\");\n$RefreshReg$(_c3, \"StartButton\");\n$RefreshReg$(_c4, \"TaskbarItems\");\n$RefreshReg$(_c5, \"TaskbarItem\");\n$RefreshReg$(_c6, \"TaskbarIcon\");\n$RefreshReg$(_c7, \"StartMenu\");\n$RefreshReg$(_c8, \"StartMenuItem\");\n$RefreshReg$(_c9, \"Clock\");\n$RefreshReg$(_c0, \"BackgroundOverlay\");\n$RefreshReg$(_c1, \"Desktop\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","styled","Icon","Window","SimpleGame","PhotoGallery","FullImageViewer","FolderContent","photoData","jsxDEV","_jsxDEV","DesktopContainer","div","_c","Taskbar","_c2","StartButton","button","_c3","TaskbarItems","_c4","TaskbarItem","props","isActive","_c5","TaskbarIcon","img","_c6","StartMenu","isOpen","_c7","StartMenuItem","_c8","Clock","_c9","BackgroundOverlay","_c0","DesktopTitle","Desktop","_s","isStartMenuOpen","setIsStartMenuOpen","currentTime","setCurrentTime","desktopState","setDesktopState","icons","id","name","type","position","x","y","icon","color","windows","activeWindowId","background","handleIconMove","iconId","prev","iconIndex","findIndex","newIcons","handleOpenCollection","collection","firstPhoto","find","photo","newWindow","title","size","width","height","isMinimized","isMaximized","zIndex","Date","now","content","onClose","handleWindowClose","onNavigate","direction","handlePhotoNavigate","fileName","_jsxFileName","lineNumber","columnNumber","handleOpenPhoto","currentPhoto","photos","filter","p","currentIndex","newIndex","length","newPhoto","newWindows","map","w","includes","dir","handleIconClick","existingWindow","window","startsWith","onOpenCollection","folderId","folderName","children","windowId","handleWindowMinimize","handleWindowMaximize","handleWindowMove","windowIndex","handleWindowResize","handleDesktopClick","updateTime","formatter","Intl","DateTimeFormat","timeZone","hour","minute","hour12","mountainTime","format","interval","setInterval","clearInterval","onClick","onMove","isSelected","onMinimize","onMaximize","onResize","onFocus","src","alt","style","imageRendering","fontWeight","fontSize","textShadow","iconSrc","_c1","$RefreshReg$"],"sources":["/home/johnmichael/Work/JuanZhingre/desktop-website/src/components/Desktop/Desktop.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Icon from '../Icon/Icon';\nimport Window from '../Window/Window';\nimport SimpleGame from '../Window/SimpleGame';\nimport PhotoGallery from '../Window/PhotoGallery';\nimport CollectionViewer from '../Window/CollectionViewer';\nimport FullImageViewer from '../Window/FullImageViewer';\nimport FolderContent from '../Window/FolderContent';\nimport { Icon as IconType, Window as WindowType, DesktopState } from '../../types/desktop';\nimport { photoData } from '../../data/photos';\n\nconst DesktopContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url('/background.png');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  overflow: hidden;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n`;\n\nconst Taskbar = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 40px;\n  background: linear-gradient(to bottom, #c0c0c0 0%, #a0a0a0 100%);\n  border-top: 2px solid #ffffff;\n  border-left: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  display: flex;\n  align-items: center;\n  padding: 0 4px;\n  z-index: 1000;\n  box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.2);\n`;\n\nconst StartButton = styled.button`\n  width: 80px;\n  height: 32px;\n  background: linear-gradient(to bottom, #c0c0c0 0%, #a0a0a0 100%);\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 8px;\n  margin-right: 8px;\n  box-shadow: inset 1px 1px 0px rgba(255, 255, 255, 0.3);\n  \n  &:active {\n    background: linear-gradient(to bottom, #a0a0a0 0%, #c0c0c0 100%);\n    border: 2px solid #808080;\n    border-right: 2px solid #ffffff;\n    border-bottom: 2px solid #ffffff;\n    border-left: 2px solid #808080;\n    box-shadow: inset 1px 1px 0px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst TaskbarItems = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  flex: 1;\n`;\n\nconst TaskbarItem = styled.div<{ isActive: boolean }>`\n  height: 28px;\n  min-width: 140px;\n  background: ${props => props.isActive \n    ? 'linear-gradient(to bottom, #ffffff 0%, #e0e0e0 100%)' \n    : 'linear-gradient(to bottom, #e0e0e0 0%, #c0c0c0 100%)'\n  };\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n  cursor: pointer;\n  font-size: 11px;\n  color: #000;\n  box-shadow: ${props => props.isActive \n    ? 'inset 1px 1px 0px rgba(0, 0, 0, 0.1)' \n    : 'inset 1px 1px 0px rgba(255, 255, 255, 0.3)'\n  };\n  \n  &:hover {\n    background: linear-gradient(to bottom, #f0f0f0 0%, #d0d0d0 100%);\n  }\n`;\n\nconst TaskbarIcon = styled.img`\n  width: 16px;\n  height: 16px;\n  margin-right: 6px;\n  image-rendering: pixelated;\n`;\n\nconst StartMenu = styled.div<{ isOpen: boolean }>`\n  position: fixed;\n  bottom: 40px;\n  left: 4px;\n  width: 200px;\n  background: #c0c0c0;\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.3);\n  z-index: 1001;\n  display: ${props => props.isOpen ? 'block' : 'none'};\n`;\n\nconst StartMenuItem = styled.div`\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 12px;\n  color: #000;\n  \n  &:hover {\n    background: #000080;\n    color: white;\n  }\n`;\n\nconst Clock = styled.div`\n  height: 28px;\n  min-width: 80px;\n  background: linear-gradient(to bottom, #e0e0e0 0%, #c0c0c0 100%);\n  border: 2px solid #ffffff;\n  border-right: 2px solid #808080;\n  border-bottom: 2px solid #808080;\n  border-left: 2px solid #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 11px;\n  color: #000;\n  font-weight: bold;\n  box-shadow: inset 1px 1px 0px rgba(255, 255, 255, 0.3);\n  margin-left: auto;\n`;\n\nconst BackgroundOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.2);\n  pointer-events: none;\n`;\n\nconst DesktopTitle = styled.div`\n  position: absolute;\n  top: 50px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 48px;\n  font-weight: bold;\n  color: white;\n  text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8);\n  z-index: 1;\n  pointer-events: none;\n`;\n\nconst Desktop: React.FC = () => {\n  const [isStartMenuOpen, setIsStartMenuOpen] = useState(false);\n  const [currentTime, setCurrentTime] = useState('');\n  const [desktopState, setDesktopState] = useState<DesktopState>({\n          icons: [\n        {\n          id: 'music',\n          name: 'music',\n          type: 'folder',\n          position: { x: 50, y: 150 },\n          icon: '/icons/music.png',\n          color: '#007AFF'\n        },\n        {\n          id: 'the-archive',\n          name: 'ishv4ra',\n          type: 'folder',\n          position: { x: 50, y: 280 },\n          icon: '/icons/ishv4ra.png',\n          color: '#8B4513'\n        },\n        {\n          id: 'sculpter',\n          name: 'playday cuts',\n          type: 'folder',\n          position: { x: 50, y: 410 },\n          icon: '/icons/playdaycuts.png',\n          color: '#FF6B6B'\n        }\n      ],\n    windows: [],\n    activeWindowId: null,\n    background: 'dog-pattern'\n  });\n\n  const handleIconMove = useCallback((iconId: string, x: number, y: number) => {\n    setDesktopState(prev => {\n      const iconIndex = prev.icons.findIndex(icon => icon.id === iconId);\n      if (iconIndex === -1) return prev;\n      \n      const newIcons = [...prev.icons];\n      newIcons[iconIndex] = {\n        ...newIcons[iconIndex],\n        position: { x, y }\n      };\n      \n      return {\n        ...prev,\n        icons: newIcons\n      };\n    });\n  }, []);\n\n  const handleOpenCollection = useCallback((collection: any) => {\n    // Find the first photo in the collection\n    const firstPhoto = photoData.find(photo => photo.collection === collection.id);\n    \n    if (firstPhoto) {\n      const newWindow: WindowType = {\n        id: `collection-${collection.id}`,\n        title: `${firstPhoto.name} - Full View`,\n        type: 'app',\n        position: { x: 200, y: 200 },\n        size: { width: 900, height: 700 },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: <FullImageViewer \n          photo={firstPhoto} \n          onClose={() => handleWindowClose(`collection-${collection.id}`)}\n          onNavigate={(direction) => handlePhotoNavigate(firstPhoto, direction)}\n        />\n      };\n      \n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    }\n  }, []);\n\n  const handleOpenPhoto = useCallback((photo: any) => {\n    const newWindow: WindowType = {\n      id: `photo-${photo.id}`,\n      title: `${photo.name} - Full View`,\n      type: 'app',\n      position: { x: 200, y: 200 },\n      size: { width: 900, height: 700 },\n      isMinimized: false,\n      isMaximized: false,\n      isOpen: true,\n      zIndex: Date.now(),\n      content: <FullImageViewer \n        photo={photo} \n        onClose={() => handleWindowClose(`photo-${photo.id}`)}\n        onNavigate={(direction) => handlePhotoNavigate(photo, direction)}\n      />\n    };\n    \n    setDesktopState(prev => ({\n      ...prev,\n      windows: [...prev.windows, newWindow],\n      activeWindowId: newWindow.id\n    }));\n  }, []);\n\n  const handlePhotoNavigate = useCallback((currentPhoto: any, direction: 'prev' | 'next') => {\n    // Find the next/previous photo in the same collection\n    const photos = photoData.filter(p => p.collection === currentPhoto.collection);\n    const currentIndex = photos.findIndex(p => p.id === currentPhoto.id);\n    let newIndex = direction === 'next' ? currentIndex + 1 : currentIndex - 1;\n    \n    // Wrap around\n    if (newIndex < 0) newIndex = photos.length - 1;\n    if (newIndex >= photos.length) newIndex = 0;\n    \n    const newPhoto = photos[newIndex];\n    \n    // Find the photo viewer window by looking for the active window\n    setDesktopState(prev => {\n      const newWindows = prev.windows.map(w => {\n        // Check if this is the active window and it's a photo viewer\n        if (w.id === prev.activeWindowId && w.title.includes('Full View')) {\n          return {\n            ...w,\n            title: `${newPhoto.name} - Full View`,\n            content: <FullImageViewer \n              photo={newPhoto} \n              onClose={() => handleWindowClose(w.id)}\n              onNavigate={(dir) => handlePhotoNavigate(newPhoto, dir)}\n            />\n          };\n        }\n        return w;\n      });\n      \n      return {\n        ...prev,\n        windows: newWindows\n      };\n    });\n  }, []);\n\n  const handleIconClick = useCallback((icon: IconType) => {\n    // Check if app is already running\n    const existingWindow = desktopState.windows.find(window => \n      window.id.startsWith(`${icon.id}-`) || window.id === `window-${icon.id}`\n    );\n\n    if (existingWindow) {\n      // If app is already running, bring it to focus and unminimize if needed\n      if (existingWindow.isMinimized) {\n        setDesktopState(prev => ({\n          ...prev,\n          windows: prev.windows.map(w => \n            w.id === existingWindow.id ? { ...w, isMinimized: false } : w\n          ),\n          activeWindowId: existingWindow.id\n        }));\n      } else {\n        // Just bring to focus\n        setDesktopState(prev => ({\n          ...prev,\n          activeWindowId: existingWindow.id,\n          windows: prev.windows.map(w => ({\n            ...w,\n            zIndex: w.id === existingWindow.id ? Date.now() : w.zIndex\n          }))\n        }));\n      }\n      return;\n    }\n\n    if (icon.id === 'music') {\n      // Open music window\n      const newWindow: WindowType = {\n        id: `music-${Date.now()}`,\n        title: 'Music',\n        type: 'app',\n        position: { x: 150, y: 150 },\n        size: { width: 800, height: 600 },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: <SimpleGame />\n      };\n      \n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.id === 'the-archive') {\n      // Open photo gallery for the Archive icon\n      const newWindow: WindowType = {\n        id: `window-${icon.id}`,\n        title: 'Photo Gallery',\n        type: 'app',\n        position: { x: 100, y: 100 },\n        size: { width: 1000, height: 700 },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: <PhotoGallery onOpenCollection={handleOpenCollection} />\n      };\n      \n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.type === 'folder') {\n      // Open folder window with custom content\n      const newWindow: WindowType = {\n        id: `window-${icon.id}`,\n        title: icon.name,\n        type: 'folder',\n        position: { x: 100, y: 100 },\n        size: { width: 600, height: 400 },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: <FolderContent folderId={icon.id} folderName={icon.name} />\n      };\n      \n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    } else if (icon.type === 'app') {\n      // Open app window\n      const newWindow: WindowType = {\n        id: `window-${icon.id}`,\n        title: icon.name,\n        type: 'app',\n        position: { x: 150, y: 150 },\n        size: { width: 800, height: 600 },\n        isMinimized: false,\n        isMaximized: false,\n        isOpen: true,\n        zIndex: Date.now(),\n        content: <div>Welcome to {icon.name}!</div>\n      };\n      \n      setDesktopState(prev => ({\n        ...prev,\n        windows: [...prev.windows, newWindow],\n        activeWindowId: newWindow.id\n      }));\n    }\n  }, [desktopState.windows]);\n\n  const handleWindowClose = useCallback((windowId: string) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.filter(w => w.id !== windowId),\n      activeWindowId: prev.activeWindowId === windowId ? null : prev.activeWindowId\n    }));\n  }, []);\n\n  const handleWindowMinimize = useCallback((windowId: string) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => \n        w.id === windowId ? { ...w, isMinimized: !w.isMinimized } : w\n      )\n    }));\n  }, []);\n\n  const handleWindowMaximize = useCallback((windowId: string) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => \n        w.id === windowId ? { ...w, isMaximized: !w.isMaximized } : w\n      )\n    }));\n  }, []);\n\n  const handleWindowMove = useCallback((windowId: string, x: number, y: number) => {\n    // Use functional update to avoid stale state issues\n    setDesktopState(prev => {\n      const windowIndex = prev.windows.findIndex(w => w.id === windowId);\n      if (windowIndex === -1) return prev;\n      \n      const newWindows = [...prev.windows];\n      newWindows[windowIndex] = {\n        ...newWindows[windowIndex],\n        position: { x, y }\n      };\n      \n      return {\n        ...prev,\n        windows: newWindows\n      };\n    });\n  }, []);\n\n  const handleWindowResize = useCallback((windowId: string, width: number, height: number) => {\n    setDesktopState(prev => ({\n      ...prev,\n      windows: prev.windows.map(w => \n        w.id === windowId ? { ...w, size: { width, height } } : w\n      )\n    }));\n  }, []);\n\n  const handleDesktopClick = useCallback(() => {\n    setIsStartMenuOpen(false);\n  }, []);\n\n  // Update time every second\n  useEffect(() => {\n    const updateTime = () => {\n      const now = new Date();\n      const formatter = new Intl.DateTimeFormat('en-US', {\n        timeZone: 'America/Denver',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      });\n      \n      const mountainTime = formatter.format(now);\n      setCurrentTime(`${mountainTime} MST`);\n    };\n\n    updateTime(); // Update immediately\n    const interval = setInterval(updateTime, 1000); // Update every second\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <DesktopContainer onClick={handleDesktopClick}>\n      <BackgroundOverlay />\n      \n      {/* Desktop Icons */}\n      {desktopState.icons.map(icon => (\n        <Icon\n          key={icon.id}\n          icon={icon}\n          onClick={() => handleIconClick(icon)}\n          onMove={handleIconMove}\n          isSelected={false}\n        />\n      ))}\n      \n      {/* Windows */}\n      {desktopState.windows.map(window => (\n        <Window\n          key={window.id}\n          window={window}\n          onClose={handleWindowClose}\n          onMinimize={handleWindowMinimize}\n          onMaximize={handleWindowMaximize}\n          onMove={handleWindowMove}\n          onResize={handleWindowResize}\n          onFocus={(windowId) => {\n            setDesktopState(prev => ({\n              ...prev,\n              activeWindowId: windowId,\n              windows: prev.windows.map(w => ({\n                ...w,\n                zIndex: w.id === windowId ? Date.now() : w.zIndex\n              }))\n            }));\n          }}\n        >\n          {window.content}\n        </Window>\n      ))}\n\n      {/* Taskbar */}\n      <Taskbar>\n        <StartButton onClick={() => setIsStartMenuOpen(!isStartMenuOpen)}>\n          <img \n            src=\"/icons/startmenu.png\" \n            alt=\"Start\" \n            style={{ \n              width: '16px', \n              height: '16px',\n              imageRendering: 'pixelated'\n            }} \n          />\n          <span style={{ \n            color: 'white', \n            fontWeight: 'bold', \n            fontSize: '12px',\n            textShadow: '1px 1px 1px rgba(0, 0, 0, 0.5)'\n          }}>\n            Start\n          </span>\n        </StartButton>\n        \n        <TaskbarItems>\n          {desktopState.windows\n            .filter(window => !window.isMinimized)\n            .map(window => {\n              // Get the icon for this window type\n              let iconSrc = '';\n              if (window.id.startsWith('music-')) {\n                iconSrc = '/icons/music.png';\n              } else if (window.id === 'window-the-archive') {\n                iconSrc = '/icons/ishv4ra.png';\n              } else if (window.id === 'window-sculpter') {\n                iconSrc = '/icons/playdaycuts.png';\n              }\n              \n              return (\n                <TaskbarItem\n                  key={window.id}\n                  isActive={desktopState.activeWindowId === window.id}\n                  onClick={() => {\n                    setDesktopState(prev => ({\n                      ...prev,\n                      activeWindowId: window.id,\n                      windows: prev.windows.map(w => {\n                        if (w.id === window.id) {\n                          return {\n                            ...w,\n                            zIndex: Date.now(),\n                            isMinimized: false // Ensure window is not minimized\n                          };\n                        }\n                        return w;\n                      })\n                    }));\n                  }}\n                >\n                  {iconSrc && <TaskbarIcon src={iconSrc} alt=\"\" />}\n                  {window.title}\n                </TaskbarItem>\n              );\n            })}\n        </TaskbarItems>\n        \n        <Clock>\n          {currentTime}\n        </Clock>\n      </Taskbar>\n\n      {/* Start Menu */}\n      <StartMenu isOpen={isStartMenuOpen}>\n        <StartMenuItem onClick={() => setIsStartMenuOpen(false)}>\n          Shut Down\n        </StartMenuItem>\n        <StartMenuItem onClick={() => setIsStartMenuOpen(false)}>\n          Restart\n        </StartMenuItem>\n        <StartMenuItem onClick={() => setIsStartMenuOpen(false)}>\n          Log Off\n        </StartMenuItem>\n      </StartMenu>\n    </DesktopContainer>\n  );\n};\n\nexport default Desktop;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC/D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,YAAY,MAAM,wBAAwB;AAEjD,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,aAAa,MAAM,yBAAyB;AAEnD,SAASC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,gBAAgB,GAAGV,MAAM,CAACW,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAVIF,gBAAgB;AAYtB,MAAMG,OAAO,GAAGb,MAAM,CAACW,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAhBID,OAAO;AAkBb,MAAME,WAAW,GAAGf,MAAM,CAACgB,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAxBIF,WAAW;AA0BjB,MAAMG,YAAY,GAAGlB,MAAM,CAACW,GAAG;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GALID,YAAY;AAOlB,MAAME,WAAW,GAAGpB,MAAM,CAACW,GAA0B;AACrD;AACA;AACA,gBAAgBU,KAAK,IAAIA,KAAK,CAACC,QAAQ,GACjC,sDAAsD,GACtD,sDAAsD;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBACgBD,KAAK,IAAIA,KAAK,CAACC,QAAQ,GACjC,sCAAsC,GACtC,4CAA4C;AAClD;AACA;AACA;AACA;AACA,CACC;AAACC,GAAA,GAzBIH,WAAW;AA2BjB,MAAMI,WAAW,GAAGxB,MAAM,CAACyB,GAAG;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,WAAW;AAOjB,MAAMG,SAAS,GAAG3B,MAAM,CAACW,GAAwB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaU,KAAK,IAAIA,KAAK,CAACO,MAAM,GAAG,OAAO,GAAG,MAAM;AACrD,CAAC;AAACC,GAAA,GAbIF,SAAS;AAef,MAAMG,aAAa,GAAG9B,MAAM,CAACW,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACoB,GAAA,GAVID,aAAa;AAYnB,MAAME,KAAK,GAAGhC,MAAM,CAACW,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACsB,GAAA,GAhBID,KAAK;AAkBX,MAAME,iBAAiB,GAAGlC,MAAM,CAACW,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACwB,GAAA,GARID,iBAAiB;AAUvB,MAAME,YAAY,GAAGpC,MAAM,CAACW,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAM0B,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC4C,WAAW,EAAEC,cAAc,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC8C,YAAY,EAAEC,eAAe,CAAC,GAAG/C,QAAQ,CAAe;IACvDgD,KAAK,EAAE,CACT;MACEC,EAAE,EAAE,OAAO;MACXC,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAE;QAAEC,CAAC,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAI,CAAC;MAC3BC,IAAI,EAAE,kBAAkB;MACxBC,KAAK,EAAE;IACT,CAAC,EACD;MACEP,EAAE,EAAE,aAAa;MACjBC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAE;QAAEC,CAAC,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAI,CAAC;MAC3BC,IAAI,EAAE,oBAAoB;MAC1BC,KAAK,EAAE;IACT,CAAC,EACD;MACEP,EAAE,EAAE,UAAU;MACdC,IAAI,EAAE,cAAc;MACpBC,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAE;QAAEC,CAAC,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAI,CAAC;MAC3BC,IAAI,EAAE,wBAAwB;MAC9BC,KAAK,EAAE;IACT,CAAC,CACF;IACHC,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE,IAAI;IACpBC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAG3D,WAAW,CAAC,CAAC4D,MAAc,EAAER,CAAS,EAAEC,CAAS,KAAK;IAC3EP,eAAe,CAACe,IAAI,IAAI;MACtB,MAAMC,SAAS,GAAGD,IAAI,CAACd,KAAK,CAACgB,SAAS,CAACT,IAAI,IAAIA,IAAI,CAACN,EAAE,KAAKY,MAAM,CAAC;MAClE,IAAIE,SAAS,KAAK,CAAC,CAAC,EAAE,OAAOD,IAAI;MAEjC,MAAMG,QAAQ,GAAG,CAAC,GAAGH,IAAI,CAACd,KAAK,CAAC;MAChCiB,QAAQ,CAACF,SAAS,CAAC,GAAG;QACpB,GAAGE,QAAQ,CAACF,SAAS,CAAC;QACtBX,QAAQ,EAAE;UAAEC,CAAC;UAAEC;QAAE;MACnB,CAAC;MAED,OAAO;QACL,GAAGQ,IAAI;QACPd,KAAK,EAAEiB;MACT,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,oBAAoB,GAAGjE,WAAW,CAAEkE,UAAe,IAAK;IAC5D;IACA,MAAMC,UAAU,GAAG1D,SAAS,CAAC2D,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACH,UAAU,KAAKA,UAAU,CAAClB,EAAE,CAAC;IAE9E,IAAImB,UAAU,EAAE;MACd,MAAMG,SAAqB,GAAG;QAC5BtB,EAAE,EAAE,cAAckB,UAAU,CAAClB,EAAE,EAAE;QACjCuB,KAAK,EAAE,GAAGJ,UAAU,CAAClB,IAAI,cAAc;QACvCC,IAAI,EAAE,KAAK;QACXC,QAAQ,EAAE;UAAEC,CAAC,EAAE,GAAG;UAAEC,CAAC,EAAE;QAAI,CAAC;QAC5BmB,IAAI,EAAE;UAAEC,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAI,CAAC;QACjCC,WAAW,EAAE,KAAK;QAClBC,WAAW,EAAE,KAAK;QAClB9C,MAAM,EAAE,IAAI;QACZ+C,MAAM,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAClBC,OAAO,eAAErE,OAAA,CAACJ,eAAe;UACvB8D,KAAK,EAAEF,UAAW;UAClBc,OAAO,EAAEA,CAAA,KAAMC,iBAAiB,CAAC,cAAchB,UAAU,CAAClB,EAAE,EAAE,CAAE;UAChEmC,UAAU,EAAGC,SAAS,IAAKC,mBAAmB,CAAClB,UAAU,EAAEiB,SAAS;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvE;MACH,CAAC;MAED3C,eAAe,CAACe,IAAI,KAAK;QACvB,GAAGA,IAAI;QACPL,OAAO,EAAE,CAAC,GAAGK,IAAI,CAACL,OAAO,EAAEc,SAAS,CAAC;QACrCb,cAAc,EAAEa,SAAS,CAACtB;MAC5B,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM0C,eAAe,GAAG1F,WAAW,CAAEqE,KAAU,IAAK;IAClD,MAAMC,SAAqB,GAAG;MAC5BtB,EAAE,EAAE,SAASqB,KAAK,CAACrB,EAAE,EAAE;MACvBuB,KAAK,EAAE,GAAGF,KAAK,CAACpB,IAAI,cAAc;MAClCC,IAAI,EAAE,KAAK;MACXC,QAAQ,EAAE;QAAEC,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE;MAAI,CAAC;MAC5BmB,IAAI,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAC;MACjCC,WAAW,EAAE,KAAK;MAClBC,WAAW,EAAE,KAAK;MAClB9C,MAAM,EAAE,IAAI;MACZ+C,MAAM,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAClBC,OAAO,eAAErE,OAAA,CAACJ,eAAe;QACvB8D,KAAK,EAAEA,KAAM;QACbY,OAAO,EAAEA,CAAA,KAAMC,iBAAiB,CAAC,SAASb,KAAK,CAACrB,EAAE,EAAE,CAAE;QACtDmC,UAAU,EAAGC,SAAS,IAAKC,mBAAmB,CAAChB,KAAK,EAAEe,SAAS;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE;IACH,CAAC;IAED3C,eAAe,CAACe,IAAI,KAAK;MACvB,GAAGA,IAAI;MACPL,OAAO,EAAE,CAAC,GAAGK,IAAI,CAACL,OAAO,EAAEc,SAAS,CAAC;MACrCb,cAAc,EAAEa,SAAS,CAACtB;IAC5B,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMqC,mBAAmB,GAAGrF,WAAW,CAAC,CAAC2F,YAAiB,EAAEP,SAA0B,KAAK;IACzF;IACA,MAAMQ,MAAM,GAAGnF,SAAS,CAACoF,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAC5B,UAAU,KAAKyB,YAAY,CAACzB,UAAU,CAAC;IAC9E,MAAM6B,YAAY,GAAGH,MAAM,CAAC7B,SAAS,CAAC+B,CAAC,IAAIA,CAAC,CAAC9C,EAAE,KAAK2C,YAAY,CAAC3C,EAAE,CAAC;IACpE,IAAIgD,QAAQ,GAAGZ,SAAS,KAAK,MAAM,GAAGW,YAAY,GAAG,CAAC,GAAGA,YAAY,GAAG,CAAC;;IAEzE;IACA,IAAIC,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAGJ,MAAM,CAACK,MAAM,GAAG,CAAC;IAC9C,IAAID,QAAQ,IAAIJ,MAAM,CAACK,MAAM,EAAED,QAAQ,GAAG,CAAC;IAE3C,MAAME,QAAQ,GAAGN,MAAM,CAACI,QAAQ,CAAC;;IAEjC;IACAlD,eAAe,CAACe,IAAI,IAAI;MACtB,MAAMsC,UAAU,GAAGtC,IAAI,CAACL,OAAO,CAAC4C,GAAG,CAACC,CAAC,IAAI;QACvC;QACA,IAAIA,CAAC,CAACrD,EAAE,KAAKa,IAAI,CAACJ,cAAc,IAAI4C,CAAC,CAAC9B,KAAK,CAAC+B,QAAQ,CAAC,WAAW,CAAC,EAAE;UACjE,OAAO;YACL,GAAGD,CAAC;YACJ9B,KAAK,EAAE,GAAG2B,QAAQ,CAACjD,IAAI,cAAc;YACrC+B,OAAO,eAAErE,OAAA,CAACJ,eAAe;cACvB8D,KAAK,EAAE6B,QAAS;cAChBjB,OAAO,EAAEA,CAAA,KAAMC,iBAAiB,CAACmB,CAAC,CAACrD,EAAE,CAAE;cACvCmC,UAAU,EAAGoB,GAAG,IAAKlB,mBAAmB,CAACa,QAAQ,EAAEK,GAAG;YAAE;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzD;UACH,CAAC;QACH;QACA,OAAOY,CAAC;MACV,CAAC,CAAC;MAEF,OAAO;QACL,GAAGxC,IAAI;QACPL,OAAO,EAAE2C;MACX,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,eAAe,GAAGxG,WAAW,CAAEsD,IAAc,IAAK;IACtD;IACA,MAAMmD,cAAc,GAAG5D,YAAY,CAACW,OAAO,CAACY,IAAI,CAACsC,MAAM,IACrDA,MAAM,CAAC1D,EAAE,CAAC2D,UAAU,CAAC,GAAGrD,IAAI,CAACN,EAAE,GAAG,CAAC,IAAI0D,MAAM,CAAC1D,EAAE,KAAK,UAAUM,IAAI,CAACN,EAAE,EACxE,CAAC;IAED,IAAIyD,cAAc,EAAE;MAClB;MACA,IAAIA,cAAc,CAAC9B,WAAW,EAAE;QAC9B7B,eAAe,CAACe,IAAI,KAAK;UACvB,GAAGA,IAAI;UACPL,OAAO,EAAEK,IAAI,CAACL,OAAO,CAAC4C,GAAG,CAACC,CAAC,IACzBA,CAAC,CAACrD,EAAE,KAAKyD,cAAc,CAACzD,EAAE,GAAG;YAAE,GAAGqD,CAAC;YAAE1B,WAAW,EAAE;UAAM,CAAC,GAAG0B,CAC9D,CAAC;UACD5C,cAAc,EAAEgD,cAAc,CAACzD;QACjC,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACL;QACAF,eAAe,CAACe,IAAI,KAAK;UACvB,GAAGA,IAAI;UACPJ,cAAc,EAAEgD,cAAc,CAACzD,EAAE;UACjCQ,OAAO,EAAEK,IAAI,CAACL,OAAO,CAAC4C,GAAG,CAACC,CAAC,KAAK;YAC9B,GAAGA,CAAC;YACJxB,MAAM,EAAEwB,CAAC,CAACrD,EAAE,KAAKyD,cAAc,CAACzD,EAAE,GAAG8B,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsB,CAAC,CAACxB;UACtD,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;MACL;MACA;IACF;IAEA,IAAIvB,IAAI,CAACN,EAAE,KAAK,OAAO,EAAE;MACvB;MACA,MAAMsB,SAAqB,GAAG;QAC5BtB,EAAE,EAAE,SAAS8B,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;QACzBR,KAAK,EAAE,OAAO;QACdrB,IAAI,EAAE,KAAK;QACXC,QAAQ,EAAE;UAAEC,CAAC,EAAE,GAAG;UAAEC,CAAC,EAAE;QAAI,CAAC;QAC5BmB,IAAI,EAAE;UAAEC,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAI,CAAC;QACjCC,WAAW,EAAE,KAAK;QAClBC,WAAW,EAAE,KAAK;QAClB9C,MAAM,EAAE,IAAI;QACZ+C,MAAM,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAClBC,OAAO,eAAErE,OAAA,CAACN,UAAU;UAAAiF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACxB,CAAC;MAED3C,eAAe,CAACe,IAAI,KAAK;QACvB,GAAGA,IAAI;QACPL,OAAO,EAAE,CAAC,GAAGK,IAAI,CAACL,OAAO,EAAEc,SAAS,CAAC;QACrCb,cAAc,EAAEa,SAAS,CAACtB;MAC5B,CAAC,CAAC,CAAC;IACL,CAAC,MAAM,IAAIM,IAAI,CAACN,EAAE,KAAK,aAAa,EAAE;MACpC;MACA,MAAMsB,SAAqB,GAAG;QAC5BtB,EAAE,EAAE,UAAUM,IAAI,CAACN,EAAE,EAAE;QACvBuB,KAAK,EAAE,eAAe;QACtBrB,IAAI,EAAE,KAAK;QACXC,QAAQ,EAAE;UAAEC,CAAC,EAAE,GAAG;UAAEC,CAAC,EAAE;QAAI,CAAC;QAC5BmB,IAAI,EAAE;UAAEC,KAAK,EAAE,IAAI;UAAEC,MAAM,EAAE;QAAI,CAAC;QAClCC,WAAW,EAAE,KAAK;QAClBC,WAAW,EAAE,KAAK;QAClB9C,MAAM,EAAE,IAAI;QACZ+C,MAAM,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAClBC,OAAO,eAAErE,OAAA,CAACL,YAAY;UAACsG,gBAAgB,EAAE3C;QAAqB;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAClE,CAAC;MAED3C,eAAe,CAACe,IAAI,KAAK;QACvB,GAAGA,IAAI;QACPL,OAAO,EAAE,CAAC,GAAGK,IAAI,CAACL,OAAO,EAAEc,SAAS,CAAC;QACrCb,cAAc,EAAEa,SAAS,CAACtB;MAC5B,CAAC,CAAC,CAAC;IACL,CAAC,MAAM,IAAIM,IAAI,CAACJ,IAAI,KAAK,QAAQ,EAAE;MACjC;MACA,MAAMoB,SAAqB,GAAG;QAC5BtB,EAAE,EAAE,UAAUM,IAAI,CAACN,EAAE,EAAE;QACvBuB,KAAK,EAAEjB,IAAI,CAACL,IAAI;QAChBC,IAAI,EAAE,QAAQ;QACdC,QAAQ,EAAE;UAAEC,CAAC,EAAE,GAAG;UAAEC,CAAC,EAAE;QAAI,CAAC;QAC5BmB,IAAI,EAAE;UAAEC,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAI,CAAC;QACjCC,WAAW,EAAE,KAAK;QAClBC,WAAW,EAAE,KAAK;QAClB9C,MAAM,EAAE,IAAI;QACZ+C,MAAM,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAClBC,OAAO,eAAErE,OAAA,CAACH,aAAa;UAACqG,QAAQ,EAAEvD,IAAI,CAACN,EAAG;UAAC8D,UAAU,EAAExD,IAAI,CAACL;QAAK;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACrE,CAAC;MAED3C,eAAe,CAACe,IAAI,KAAK;QACvB,GAAGA,IAAI;QACPL,OAAO,EAAE,CAAC,GAAGK,IAAI,CAACL,OAAO,EAAEc,SAAS,CAAC;QACrCb,cAAc,EAAEa,SAAS,CAACtB;MAC5B,CAAC,CAAC,CAAC;IACL,CAAC,MAAM,IAAIM,IAAI,CAACJ,IAAI,KAAK,KAAK,EAAE;MAC9B;MACA,MAAMoB,SAAqB,GAAG;QAC5BtB,EAAE,EAAE,UAAUM,IAAI,CAACN,EAAE,EAAE;QACvBuB,KAAK,EAAEjB,IAAI,CAACL,IAAI;QAChBC,IAAI,EAAE,KAAK;QACXC,QAAQ,EAAE;UAAEC,CAAC,EAAE,GAAG;UAAEC,CAAC,EAAE;QAAI,CAAC;QAC5BmB,IAAI,EAAE;UAAEC,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAI,CAAC;QACjCC,WAAW,EAAE,KAAK;QAClBC,WAAW,EAAE,KAAK;QAClB9C,MAAM,EAAE,IAAI;QACZ+C,MAAM,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAClBC,OAAO,eAAErE,OAAA;UAAAoG,QAAA,GAAK,aAAW,EAACzD,IAAI,CAACL,IAAI,EAAC,GAAC;QAAA;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAC5C,CAAC;MAED3C,eAAe,CAACe,IAAI,KAAK;QACvB,GAAGA,IAAI;QACPL,OAAO,EAAE,CAAC,GAAGK,IAAI,CAACL,OAAO,EAAEc,SAAS,CAAC;QACrCb,cAAc,EAAEa,SAAS,CAACtB;MAC5B,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAACH,YAAY,CAACW,OAAO,CAAC,CAAC;EAE1B,MAAM0B,iBAAiB,GAAGlF,WAAW,CAAEgH,QAAgB,IAAK;IAC1DlE,eAAe,CAACe,IAAI,KAAK;MACvB,GAAGA,IAAI;MACPL,OAAO,EAAEK,IAAI,CAACL,OAAO,CAACqC,MAAM,CAACQ,CAAC,IAAIA,CAAC,CAACrD,EAAE,KAAKgE,QAAQ,CAAC;MACpDvD,cAAc,EAAEI,IAAI,CAACJ,cAAc,KAAKuD,QAAQ,GAAG,IAAI,GAAGnD,IAAI,CAACJ;IACjE,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMwD,oBAAoB,GAAGjH,WAAW,CAAEgH,QAAgB,IAAK;IAC7DlE,eAAe,CAACe,IAAI,KAAK;MACvB,GAAGA,IAAI;MACPL,OAAO,EAAEK,IAAI,CAACL,OAAO,CAAC4C,GAAG,CAACC,CAAC,IACzBA,CAAC,CAACrD,EAAE,KAAKgE,QAAQ,GAAG;QAAE,GAAGX,CAAC;QAAE1B,WAAW,EAAE,CAAC0B,CAAC,CAAC1B;MAAY,CAAC,GAAG0B,CAC9D;IACF,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,oBAAoB,GAAGlH,WAAW,CAAEgH,QAAgB,IAAK;IAC7DlE,eAAe,CAACe,IAAI,KAAK;MACvB,GAAGA,IAAI;MACPL,OAAO,EAAEK,IAAI,CAACL,OAAO,CAAC4C,GAAG,CAACC,CAAC,IACzBA,CAAC,CAACrD,EAAE,KAAKgE,QAAQ,GAAG;QAAE,GAAGX,CAAC;QAAEzB,WAAW,EAAE,CAACyB,CAAC,CAACzB;MAAY,CAAC,GAAGyB,CAC9D;IACF,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,gBAAgB,GAAGnH,WAAW,CAAC,CAACgH,QAAgB,EAAE5D,CAAS,EAAEC,CAAS,KAAK;IAC/E;IACAP,eAAe,CAACe,IAAI,IAAI;MACtB,MAAMuD,WAAW,GAAGvD,IAAI,CAACL,OAAO,CAACO,SAAS,CAACsC,CAAC,IAAIA,CAAC,CAACrD,EAAE,KAAKgE,QAAQ,CAAC;MAClE,IAAII,WAAW,KAAK,CAAC,CAAC,EAAE,OAAOvD,IAAI;MAEnC,MAAMsC,UAAU,GAAG,CAAC,GAAGtC,IAAI,CAACL,OAAO,CAAC;MACpC2C,UAAU,CAACiB,WAAW,CAAC,GAAG;QACxB,GAAGjB,UAAU,CAACiB,WAAW,CAAC;QAC1BjE,QAAQ,EAAE;UAAEC,CAAC;UAAEC;QAAE;MACnB,CAAC;MAED,OAAO;QACL,GAAGQ,IAAI;QACPL,OAAO,EAAE2C;MACX,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,kBAAkB,GAAGrH,WAAW,CAAC,CAACgH,QAAgB,EAAEvC,KAAa,EAAEC,MAAc,KAAK;IAC1F5B,eAAe,CAACe,IAAI,KAAK;MACvB,GAAGA,IAAI;MACPL,OAAO,EAAEK,IAAI,CAACL,OAAO,CAAC4C,GAAG,CAACC,CAAC,IACzBA,CAAC,CAACrD,EAAE,KAAKgE,QAAQ,GAAG;QAAE,GAAGX,CAAC;QAAE7B,IAAI,EAAE;UAAEC,KAAK;UAAEC;QAAO;MAAE,CAAC,GAAG2B,CAC1D;IACF,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,kBAAkB,GAAGtH,WAAW,CAAC,MAAM;IAC3C0C,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAzC,SAAS,CAAC,MAAM;IACd,MAAMsH,UAAU,GAAGA,CAAA,KAAM;MACvB,MAAMxC,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;MACtB,MAAM0C,SAAS,GAAG,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;QACjDC,QAAQ,EAAE,gBAAgB;QAC1BC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE,SAAS;QACjBC,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,MAAMC,YAAY,GAAGP,SAAS,CAACQ,MAAM,CAACjD,GAAG,CAAC;MAC1CnC,cAAc,CAAC,GAAGmF,YAAY,MAAM,CAAC;IACvC,CAAC;IAEDR,UAAU,CAAC,CAAC,CAAC,CAAC;IACd,MAAMU,QAAQ,GAAGC,WAAW,CAACX,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEhD,OAAO,MAAMY,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtH,OAAA,CAACC,gBAAgB;IAACwH,OAAO,EAAEd,kBAAmB;IAAAP,QAAA,gBAC5CpG,OAAA,CAACyB,iBAAiB;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGpB5C,YAAY,CAACE,KAAK,CAACqD,GAAG,CAAC9C,IAAI,iBAC1B3C,OAAA,CAACR,IAAI;MAEHmD,IAAI,EAAEA,IAAK;MACX8E,OAAO,EAAEA,CAAA,KAAM5B,eAAe,CAAClD,IAAI,CAAE;MACrC+E,MAAM,EAAE1E,cAAe;MACvB2E,UAAU,EAAE;IAAM,GAJbhF,IAAI,CAACN,EAAE;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKb,CACF,CAAC,EAGD5C,YAAY,CAACW,OAAO,CAAC4C,GAAG,CAACM,MAAM,iBAC9B/F,OAAA,CAACP,MAAM;MAELsG,MAAM,EAAEA,MAAO;MACfzB,OAAO,EAAEC,iBAAkB;MAC3BqD,UAAU,EAAEtB,oBAAqB;MACjCuB,UAAU,EAAEtB,oBAAqB;MACjCmB,MAAM,EAAElB,gBAAiB;MACzBsB,QAAQ,EAAEpB,kBAAmB;MAC7BqB,OAAO,EAAG1B,QAAQ,IAAK;QACrBlE,eAAe,CAACe,IAAI,KAAK;UACvB,GAAGA,IAAI;UACPJ,cAAc,EAAEuD,QAAQ;UACxBxD,OAAO,EAAEK,IAAI,CAACL,OAAO,CAAC4C,GAAG,CAACC,CAAC,KAAK;YAC9B,GAAGA,CAAC;YACJxB,MAAM,EAAEwB,CAAC,CAACrD,EAAE,KAAKgE,QAAQ,GAAGlC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsB,CAAC,CAACxB;UAC7C,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;MACL,CAAE;MAAAkC,QAAA,EAEDL,MAAM,CAAC1B;IAAO,GAlBV0B,MAAM,CAAC1D,EAAE;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAmBR,CACT,CAAC,eAGF9E,OAAA,CAACI,OAAO;MAAAgG,QAAA,gBACNpG,OAAA,CAACM,WAAW;QAACmH,OAAO,EAAEA,CAAA,KAAM1F,kBAAkB,CAAC,CAACD,eAAe,CAAE;QAAAsE,QAAA,gBAC/DpG,OAAA;UACEgI,GAAG,EAAC,sBAAsB;UAC1BC,GAAG,EAAC,OAAO;UACXC,KAAK,EAAE;YACLpE,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE,MAAM;YACdoE,cAAc,EAAE;UAClB;QAAE;UAAAxD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACF9E,OAAA;UAAMkI,KAAK,EAAE;YACXtF,KAAK,EAAE,OAAO;YACdwF,UAAU,EAAE,MAAM;YAClBC,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE;UACd,CAAE;UAAAlC,QAAA,EAAC;QAEH;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAEd9E,OAAA,CAACS,YAAY;QAAA2F,QAAA,EACVlE,YAAY,CAACW,OAAO,CAClBqC,MAAM,CAACa,MAAM,IAAI,CAACA,MAAM,CAAC/B,WAAW,CAAC,CACrCyB,GAAG,CAACM,MAAM,IAAI;UACb;UACA,IAAIwC,OAAO,GAAG,EAAE;UAChB,IAAIxC,MAAM,CAAC1D,EAAE,CAAC2D,UAAU,CAAC,QAAQ,CAAC,EAAE;YAClCuC,OAAO,GAAG,kBAAkB;UAC9B,CAAC,MAAM,IAAIxC,MAAM,CAAC1D,EAAE,KAAK,oBAAoB,EAAE;YAC7CkG,OAAO,GAAG,oBAAoB;UAChC,CAAC,MAAM,IAAIxC,MAAM,CAAC1D,EAAE,KAAK,iBAAiB,EAAE;YAC1CkG,OAAO,GAAG,wBAAwB;UACpC;UAEA,oBACEvI,OAAA,CAACW,WAAW;YAEVE,QAAQ,EAAEqB,YAAY,CAACY,cAAc,KAAKiD,MAAM,CAAC1D,EAAG;YACpDoF,OAAO,EAAEA,CAAA,KAAM;cACbtF,eAAe,CAACe,IAAI,KAAK;gBACvB,GAAGA,IAAI;gBACPJ,cAAc,EAAEiD,MAAM,CAAC1D,EAAE;gBACzBQ,OAAO,EAAEK,IAAI,CAACL,OAAO,CAAC4C,GAAG,CAACC,CAAC,IAAI;kBAC7B,IAAIA,CAAC,CAACrD,EAAE,KAAK0D,MAAM,CAAC1D,EAAE,EAAE;oBACtB,OAAO;sBACL,GAAGqD,CAAC;sBACJxB,MAAM,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;sBAClBJ,WAAW,EAAE,KAAK,CAAC;oBACrB,CAAC;kBACH;kBACA,OAAO0B,CAAC;gBACV,CAAC;cACH,CAAC,CAAC,CAAC;YACL,CAAE;YAAAU,QAAA,GAEDmC,OAAO,iBAAIvI,OAAA,CAACe,WAAW;cAACiH,GAAG,EAAEO,OAAQ;cAACN,GAAG,EAAC;YAAE;cAAAtD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAC/CiB,MAAM,CAACnC,KAAK;UAAA,GApBRmC,MAAM,CAAC1D,EAAE;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAqBH,CAAC;QAElB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eAEf9E,OAAA,CAACuB,KAAK;QAAA6E,QAAA,EACHpE;MAAW;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGV9E,OAAA,CAACkB,SAAS;MAACC,MAAM,EAAEW,eAAgB;MAAAsE,QAAA,gBACjCpG,OAAA,CAACqB,aAAa;QAACoG,OAAO,EAAEA,CAAA,KAAM1F,kBAAkB,CAAC,KAAK,CAAE;QAAAqE,QAAA,EAAC;MAEzD;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,eAChB9E,OAAA,CAACqB,aAAa;QAACoG,OAAO,EAAEA,CAAA,KAAM1F,kBAAkB,CAAC,KAAK,CAAE;QAAAqE,QAAA,EAAC;MAEzD;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,eAChB9E,OAAA,CAACqB,aAAa;QAACoG,OAAO,EAAEA,CAAA,KAAM1F,kBAAkB,CAAC,KAAK,CAAE;QAAAqE,QAAA,EAAC;MAEzD;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEvB,CAAC;AAACjD,EAAA,CA5cID,OAAiB;AAAA4G,GAAA,GAAjB5G,OAAiB;AA8cvB,eAAeA,OAAO;AAAC,IAAAzB,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAA8G,GAAA;AAAAC,YAAA,CAAAtI,EAAA;AAAAsI,YAAA,CAAApI,GAAA;AAAAoI,YAAA,CAAAjI,GAAA;AAAAiI,YAAA,CAAA/H,GAAA;AAAA+H,YAAA,CAAA3H,GAAA;AAAA2H,YAAA,CAAAxH,GAAA;AAAAwH,YAAA,CAAArH,GAAA;AAAAqH,YAAA,CAAAnH,GAAA;AAAAmH,YAAA,CAAAjH,GAAA;AAAAiH,YAAA,CAAA/G,GAAA;AAAA+G,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}